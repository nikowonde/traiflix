{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\src\\\\components\\\\search.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPersonInfo } from '../store/actions/homepageActions';\nvar img_url = 'https://image.tmdb.org/t/p/original';\nvar personId;\n\nvar SearchPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchPage, _React$Component);\n\n  function SearchPage() {\n    _classCallCheck(this, SearchPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SearchPage).apply(this, arguments));\n  }\n\n  _createClass(SearchPage, [{\n    key: \"render\",\n    value: function render() {\n      var results;\n\n      if (this.props.results.length > 0) {\n        console.log(this.props.results[0].results[0].media_type);\n        results = this.props.results[0].results.map(function (rs) {\n          if (rs.media_type === 'movie' && rs.poster_path !== null) return React.createElement(\"div\", {\n            className: \".col-md-4\",\n            key: rs.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"search-results\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"search-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }, rs.title), React.createElement(\"img\", {\n            className: \"search-image\",\n            src: \"\".concat(img_url).concat(rs.poster_path),\n            alt: rs.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            className: \"search-release\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }, \"Released: \".concat(rs.release_date)), React.createElement(\"p\", {\n            className: \"search-vote\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, \"Rating: \".concat(rs.vote_average))));\n          if (rs.poster_path === 'null' || rs.poster_path === '') return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, null);\n          if (rs.media_type === 'tv' && rs.poster_path !== null) return React.createElement(\"div\", {\n            className: \".col-md-4\",\n            key: rs.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"search-results\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"search-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, rs.name), React.createElement(\"img\", {\n            className: \"search-image\",\n            src: \"\".concat(img_url).concat(rs.poster_path),\n            alt: rs.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            className: \"search-release\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, \"Aired: \".concat(rs.first_air_date)), React.createElement(\"p\", {\n            className: \"search-vote\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, \"Rating: \".concat(rs.vote_average))));\n          if (rs.poster_path === '' || rs.backdrop_path === '') return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, null);\n        });\n      }\n\n      var person_results;\n\n      if (this.props.results.length > 0) {\n        if (this.props.results[0].results[0].media_type === 'person') {\n          person_results = this.props.results[0].results[0];\n          personId = person_results.id;\n          return React.createElement(\"div\", {\n            className: \".col-md-4 search-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"search-results-person\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"search-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, person_results.name), React.createElement(\"img\", {\n            className: \"search-image\",\n            src: \"\".concat(img_url).concat(person_results.profile_path),\n            alt: person_results.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          })));\n        }\n      }\n      /*let person;\r\n          if (props.person.length > 0){\r\n              person = props.person.map(person => {\r\n                })\r\n          }*/\n\n\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"search-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, results, person_results)));\n    }\n  }]);\n\n  return SearchPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    results: state.movTv.results,\n    person: state.movTv.personInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPersonInfo: fetchPersonInfo\n})(SearchPage);","map":{"version":3,"sources":["C:\\Users\\wonde\\Desktop\\react\\traiflix\\traiflix\\src\\components\\search.js"],"names":["React","connect","fetchPersonInfo","img_url","personId","SearchPage","results","props","length","console","log","media_type","map","rs","poster_path","id","title","release_date","vote_average","name","first_air_date","backdrop_path","person_results","profile_path","Component","mapStateToProps","state","movTv","person","personInfo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { fetchPersonInfo } from '../store/actions/homepageActions'\r\n\r\nconst img_url = 'https://image.tmdb.org/t/p/original';\r\n\r\nlet personId;\r\n\r\nclass SearchPage extends React.Component {\r\n    render(){\r\n    let results;\r\n        if(this.props.results.length > 0){\r\n            console.log(this.props.results[0].results[0].media_type);\r\n            results = this.props.results[0].results.map(rs => {\r\n                if(rs.media_type === 'movie' && rs.poster_path !== null)\r\n                    return (\r\n                        <div className='.col-md-4' key={rs.id}>\r\n                            <div className='search-results'>\r\n                                <h5 className='search-title'>{rs.title}</h5>\r\n                                <img className='search-image' src={`${img_url}${rs.poster_path}`} alt={rs.title} />\r\n                                <p className='search-release'>{`Released: ${rs.release_date}`}</p>\r\n                                <p className='search-vote'>{`Rating: ${rs.vote_average}`}</p>\r\n                                {\r\n                                //<p className='search-overview'>{rs.overview}</p>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                if (rs.poster_path === 'null' || rs.poster_path === '')\r\n                        return (<div>{null}</div>)\r\n                if (rs.media_type === 'tv' && rs.poster_path !== null)\r\n                    return (\r\n                    <div className='.col-md-4' key={rs.id}>\r\n                        <div className='search-results'>\r\n                            <h5 className='search-title'>{rs.name}</h5>\r\n                            <img className='search-image' src={`${img_url}${rs.poster_path}`} alt={rs.title} />\r\n                            <p className='search-release'>{`Aired: ${rs.first_air_date}`}</p>\r\n                            <p className='search-vote'>{`Rating: ${rs.vote_average}`}</p>\r\n                            {\r\n                                //<p className='search-overview'>{rs.overview}</p>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                if (rs.poster_path === '' || rs.backdrop_path === '')\r\n                        return (<div>{null}</div>);\r\n            } \r\n            \r\n            )\r\n        }\r\n        let person_results;\r\n            if (this.props.results.length > 0){\r\n                if (this.props.results[0].results[0].media_type === 'person'){\r\n                    person_results = this.props.results[0].results[0];\r\n                    personId = person_results.id;\r\n                    return (\r\n                        <div className='.col-md-4 search-container'>\r\n                                <div className='search-results-person'>\r\n                                    <h5 className='search-title'>{person_results.name}</h5>\r\n                                    <img className='search-image' src={`${img_url}${person_results.profile_path}`} alt={person_results.name} />\r\n                                </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n\r\n    /*let person;\r\n        if (props.person.length > 0){\r\n            person = props.person.map(person => {\r\n\r\n            })\r\n        }*/\r\n            return (\r\n                <div className='container-fluid'>\r\n                    <span className='search-container'>\r\n                        <div className='row'>\r\n                                {results}\r\n                                {person_results}\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        results: state.movTv.results,\r\n        person: state.movTv.personInfo\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchPersonInfo })(SearchPage);"]},"metadata":{},"sourceType":"module"}