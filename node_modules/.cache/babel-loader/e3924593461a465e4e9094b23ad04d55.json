{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\src\\\\components\\\\trendingTv.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Slider from 'react-slick';\nimport SliModalTv from './sliModalTv';\nvar img_url = 'https://image.tmdb.org/t/p/original';\n\nvar TrendingTv =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TrendingTv, _React$Component);\n\n  function TrendingTv() {\n    var _this;\n\n    _classCallCheck(this, TrendingTv);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TrendingTv).call(this));\n    _this.state = {\n      modalIsOpen: false,\n      tv: {\n        id: '',\n        first_air_date: '',\n        vote_average: '',\n        title: ''\n      }\n    };\n    _this.openModal = _this.openModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.afterOpenModal = _this.afterOpenModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TrendingTv, [{\n    key: \"openModal\",\n    value: function openModal(tv) {\n      this.setState({\n        modalIsOpen: true,\n        tv: tv\n      }); //console.log(tv);\n      //console.log(tv.id);\n\n      this.props.fetchTvVideo(tv);\n    }\n  }, {\n    key: \"afterOpenModal\",\n    value: function afterOpenModal() {\n      this.subtitle.style.color = '#f00';\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        modalIsOpen: false,\n        tv: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var trending;\n\n      if (props.trending.length > 0) {\n        //console.log(props.trending[0].results)\n        trending = props.trending[0].results.map(function (tr) {\n          return React.createElement(\"div\", {\n            className: \"sliderbox\",\n            key: tr.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"text-block\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"sliderTitle\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, tr.name), React.createElement(SliModalTv, {\n            toModal: tr,\n            img_url: img_url,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            className: \"sliderRelease\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, tr.first_air_date), React.createElement(\"p\", {\n            className: \"sliderVote\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, tr.vote_average)), React.createElement(\"img\", {\n            className: \"sliderImg\",\n            src: \"\".concat(img_url).concat(tr.poster_path),\n            alt: tr.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }));\n        });\n      }\n\n      var settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 6,\n        slidesToScroll: 2\n      };\n      var tmpId = this.props.videos.length > 0 ? this.props.videos[0][0].key : '';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Slider, Object.assign({}, settings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), trending), React.createElement(Modal, {\n        isOpen: this.state.modalIsOpen,\n        onAfterOpen: this.afterOpenModal,\n        onRequestClose: this.closeModal,\n        style: customStyles,\n        contentLabel: \"tv modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        ref: function ref(subtitle) {\n          return _this2.subtitle = subtitle;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.tv.name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Id: \", this.state.tv.id), React.createElement(\"h5\", {\n        className: \"modalRelease\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Released: \", this.state.tv.first_air_date), React.createElement(\"h5\", {\n        className: \"modalVote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Rating: \", this.state.tv.vote_average), tmpId.length > 0 ? React.createElement(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: \"https://www.youtube.com/embed/\".concat(tmpId),\n        frameBorder: \"0\",\n        title: \"youtube\",\n        allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Loading...\")), React.createElement(\"button\", {\n        className: \"modalClose\",\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"X\")));\n    }\n  }]);\n\n  return TrendingTv;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    trending: state.movTv.trendingTv,\n    videos: state.movTv.videostv\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTvVideo: fetchTvVideo\n})(TrendingTv); //poster={tr.results.poster_path} title={tr.results.title} description={tr.results.overview} release={tr.results.release_date} key={tr.results[0].id}\n\n/*\r\n            <div classNameName='col-sm' key={tr.results[0].id}>\r\n                <img classNameName='sliderImg' src={tr.results[0].poster_path} alt={tr.results.title} />\r\n                <h4 classNameName='sliderTitle'>{tr.results[0].title}</h4>\r\n                <p classNameName='sliderDescription'>{tr.results[0].overview}</p>\r\n            </div>\r\n\r\n\r\n\r\n*/","map":{"version":3,"sources":["C:\\Users\\wonde\\Desktop\\react\\traiflix\\traiflix\\src\\components\\trendingTv.js"],"names":["React","connect","Slider","SliModalTv","img_url","TrendingTv","state","modalIsOpen","tv","id","first_air_date","vote_average","title","openModal","bind","afterOpenModal","closeModal","setState","props","fetchTvVideo","subtitle","style","color","trending","length","results","map","tr","name","poster_path","settings","dots","infinite","speed","slidesToShow","slidesToScroll","tmpId","videos","key","customStyles","Component","mapStateToProps","movTv","trendingTv","videostv"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Slider from 'react-slick';\r\nimport SliModalTv from './sliModalTv';\r\n\r\nconst img_url = 'https://image.tmdb.org/t/p/original';\r\n\r\nclass TrendingTv extends React.Component{\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            modalIsOpen: false,\r\n            tv: {\r\n                id: '', first_air_date: '', vote_average: '', title: ''\r\n            }\r\n        };\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.afterOpenModal = this.afterOpenModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n\r\n\r\n    }\r\n\r\n    openModal(tv) {\r\n        this.setState({modalIsOpen: true, tv: tv});\r\n        //console.log(tv);\r\n        //console.log(tv.id);\r\n        this.props.fetchTvVideo(tv);\r\n    }\r\n\r\n    afterOpenModal(){\r\n        this.subtitle.style.color = '#f00';\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({modalIsOpen: false, tv: ''});\r\n    }\r\n\r\n    render(){\r\n        let trending;\r\n        if (props.trending.length > 0){\r\n            //console.log(props.trending[0].results)\r\n            trending = props.trending[0].results.map(tr => (\r\n                    <div className='sliderbox' key={tr.id}>\r\n                        <div className='text-block'>\r\n                            <h5 className='sliderTitle'>{tr.name}</h5>\r\n                            <SliModalTv\r\n                            toModal={tr}\r\n                            img_url={img_url}\r\n                            />\r\n                            <p className='sliderRelease'>{tr.first_air_date}</p>\r\n                            <p className='sliderVote'>{tr.vote_average}</p>\r\n                        </div>\r\n                        <img className='sliderImg' src={`${img_url}${tr.poster_path}`} alt={tr.title} />\r\n                    </div>\r\n            ));\r\n        }\r\n\r\n        const settings = {\r\n            dots: true,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 6,\r\n            slidesToScroll: 2\r\n        };\r\n\r\n        let tmpId = this.props.videos.length > 0 ? this.props.videos[0][0].key : '';\r\n        return (\r\n            <div>\r\n                <Slider {...settings}>\r\n                    {trending}\r\n                </Slider>\r\n                <Modal\r\n                isOpen={this.state.modalIsOpen}\r\n                onAfterOpen={this.afterOpenModal}\r\n                onRequestClose={this.closeModal}\r\n                style={customStyles}\r\n                contentLabel='tv modal'\r\n                >\r\n                <h2 ref={subtitle => this.subtitle = subtitle}>{this.state.tv.name}</h2>\r\n                    <div>\r\n                    <p>Id: {this.state.tv.id}</p>\r\n                    <h5 className='modalRelease'>Released: {this.state.tv.first_air_date}</h5>\r\n                    <h5 className='modalVote'>Rating: {this.state.tv.vote_average}</h5>\r\n                    {tmpId.length >0 ?<iframe width=\"560\" height=\"315\" src={`https://www.youtube.com/embed/${tmpId}`} frameBorder=\"0\" title='youtube' allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe> : <p className='loading'>Loading...</p>}\r\n                    </div>\r\n                <button className='modalClose' onClick={this.closeModal}>X</button>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        trending: state.movTv.trendingTv,\r\n        videos: state.movTv.videostv\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchTvVideo })(TrendingTv);\r\n\r\n//poster={tr.results.poster_path} title={tr.results.title} description={tr.results.overview} release={tr.results.release_date} key={tr.results[0].id}\r\n/*\r\n            <div classNameName='col-sm' key={tr.results[0].id}>\r\n                <img classNameName='sliderImg' src={tr.results[0].poster_path} alt={tr.results.title} />\r\n                <h4 classNameName='sliderTitle'>{tr.results[0].title}</h4>\r\n                <p classNameName='sliderDescription'>{tr.results[0].overview}</p>\r\n            </div>\r\n\r\n\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}