{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\src\\\\components\\\\similarMovies.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Slider from 'react-slick';\nimport SliModal from './sliModal';\nvar img_url = 'https://image.tmdb.org/t/p/original';\n\nvar SimilarMovies = function SimilarMovies(props) {\n  var settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 6,\n    slidesToScroll: 3,\n    initialSlide: 1\n  };\n  var similar;\n\n  if (props.similar.length > 0) {\n    //console.log(props.similar[0].results)\n    similar = props.similar[0].results.map(function (sm) {\n      return React.createElement(\"div\", {\n        className: \"sliderbox\",\n        key: sm.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"sliderTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, sm.title), React.createElement(SliModal, {\n        toModal: sm,\n        img_url: img_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"sliderRelease\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, sm.release_date), React.createElement(\"p\", {\n        className: \"sliderVote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, sm.vote_average)), React.createElement(\"img\", {\n        className: \"sliderImg\",\n        src: \"\".concat(img_url).concat(sm.poster_path),\n        alt: sm.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    });\n  }\n\n  return React.createElement(Slider, Object.assign({}, settings, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), similar);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    similar: state.movTv.similar\n  };\n};\n\nexport default connect(mapStateToProps)(SimilarMovies);","map":{"version":3,"sources":["C:\\Users\\wonde\\Desktop\\react\\traiflix\\traiflix\\src\\components\\similarMovies.js"],"names":["React","connect","Slider","SliModal","img_url","SimilarMovies","props","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","similar","length","results","map","sm","id","title","release_date","vote_average","poster_path","mapStateToProps","state","movTv"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,OAAO,GAAG,qCAAhB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,MAAMC,QAAQ,GAAG;AACbC,IAAAA,IAAI,EAAE,IADO;AAEbC,IAAAA,QAAQ,EAAE,IAFG;AAGbC,IAAAA,KAAK,EAAE,GAHM;AAIbC,IAAAA,YAAY,EAAE,CAJD;AAKbC,IAAAA,cAAc,EAAE,CALH;AAMbC,IAAAA,YAAY,EAAE;AAND,GAAjB;AASA,MAAIC,OAAJ;;AACA,MAAIR,KAAK,CAACQ,OAAN,CAAcC,MAAd,GAAuB,CAA3B,EAA6B;AACzB;AACAD,IAAAA,OAAO,GAAGR,KAAK,CAACQ,OAAN,CAAc,CAAd,EAAiBE,OAAjB,CAAyBC,GAAzB,CAA6B,UAAAC,EAAE;AAAA,aACjC;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAEA,EAAE,CAACC,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BD,EAAE,CAACE,KAAhC,CADJ,EAEI,oBAAC,QAAD;AACA,QAAA,OAAO,EAAEF,EADT;AAEA,QAAA,OAAO,EAAEd,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAMI;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8Bc,EAAE,CAACG,YAAjC,CANJ,EAOI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BH,EAAE,CAACI,YAA9B,CAPJ,CADJ,EAUI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,YAAKlB,OAAL,SAAec,EAAE,CAACK,WAAlB,CAA9B;AAA+D,QAAA,GAAG,EAAEL,EAAE,CAACE,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CADiC;AAAA,KAA/B,CAAV;AAcH;;AACD,SACI,oBAAC,MAAD,oBAAYb,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKO,OADL,CADJ;AAKH,CAjCD;;AAoCA,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHX,IAAAA,OAAO,EAAEW,KAAK,CAACC,KAAN,CAAYZ;AADlB,GAAP;AAGH,CAJD;;AAMA,eAAeb,OAAO,CAACuB,eAAD,CAAP,CAAyBnB,aAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Slider from 'react-slick';\r\nimport SliModal from './sliModal';\r\n\r\nconst img_url = 'https://image.tmdb.org/t/p/original';\r\n\r\nconst SimilarMovies = (props) => {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 6,\r\n        slidesToScroll: 3,\r\n        initialSlide: 1,\r\n    };\r\n\r\n    let similar;\r\n    if (props.similar.length > 0){\r\n        //console.log(props.similar[0].results)\r\n        similar = props.similar[0].results.map(sm => (\r\n                <div className='sliderbox' key={sm.id}>\r\n                    <div className='text-block'>\r\n                        <h5 className='sliderTitle'>{sm.title}</h5>\r\n                        <SliModal\r\n                        toModal={sm}\r\n                        img_url={img_url}\r\n                        />\r\n                        <p className='sliderRelease'>{sm.release_date}</p>\r\n                        <p className='sliderVote'>{sm.vote_average}</p>\r\n                    </div>\r\n                    <img className='sliderImg' src={`${img_url}${sm.poster_path}`} alt={sm.title} />\r\n                </div>\r\n        ));\r\n    }\r\n    return (\r\n        <Slider {...settings}>\r\n            {similar}\r\n        </Slider>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        similar: state.movTv.similar\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SimilarMovies);"]},"metadata":{},"sourceType":"module"}