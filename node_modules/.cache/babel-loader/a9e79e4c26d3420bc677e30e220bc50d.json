{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\src\\\\components\\\\similarMovies.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Slider from 'react-slick';\nimport { fetchVideo } from '../store/actions/homepageActions';\nvar img_url = 'https://image.tmdb.org/t/p/original';\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    color: 'white',\n    background: '#080a0a none repeat scroll 0% 0%',\n    width: '600px'\n  }\n};\nModal.setAppElement('#root');\n\nvar SimilarMovies =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SimilarMovies, _React$Component);\n\n  function SimilarMovies() {\n    var _this;\n\n    _classCallCheck(this, SimilarMovies);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SimilarMovies).call(this));\n    _this.state = {\n      modalIsOpen: false,\n      movie: {\n        id: '',\n        release_date: '',\n        vote_average: '',\n        title: ''\n      }\n    };\n    _this.openModal = _this.openModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.afterOpenModal = _this.afterOpenModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SimilarMovies, [{\n    key: \"openModal\",\n    value: function openModal(movie) {\n      this.setState({\n        modalIsOpen: true,\n        movie: movie\n      });\n      this.props.fetchVideo(movie);\n    }\n  }, {\n    key: \"afterOpenModal\",\n    value: function afterOpenModal() {\n      this.subtitle.style.color = '#f00';\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        modalIsOpen: false,\n        movie: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var similar;\n\n      if (this.props.similar.length > 0) {\n        //console.log(props.similar[0].results)\n        similar = this.props.similar[0].results.map(function (sm) {\n          return React.createElement(\"div\", {\n            className: \"sliderbox\",\n            key: sm.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"text-block\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"sliderTitle\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, sm.title), React.createElement(FontAwesomeIcon, {\n            onClick: function onClick() {\n              return _this2.openModal(sm);\n            },\n            icon: \"plus-circle\",\n            className: \"sliderIcon\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            className: \"sliderRelease\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, sm.release_date), React.createElement(\"p\", {\n            className: \"sliderVote\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, sm.vote_average)), React.createElement(\"img\", {\n            className: \"sliderImg\",\n            src: \"\".concat(img_url).concat(sm.poster_path),\n            alt: sm.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }));\n        });\n      }\n\n      var settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 6,\n        slidesToScroll: 1,\n        initialSlide: 0,\n        rtl: false,\n        className: 'innerSliderDiv'\n      };\n      var tmpId = this.props.videos.length > 0 ? this.props.videos[0][0].key : '';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Slider, Object.assign({}, settings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), similar), React.createElement(Modal, {\n        isOpen: this.state.modalIsOpen,\n        onAfterOpen: this.afterOpenModal,\n        onRequestClose: this.closeModal,\n        style: customStyles,\n        contentLabel: \"similar movie modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        ref: function ref(subtitle) {\n          return _this2.subtitle = subtitle;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.state.movie.title), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Id: \", this.state.movie.id), React.createElement(\"h5\", {\n        className: \"modalRelease\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Released: \", this.state.movie.release_date), React.createElement(\"h5\", {\n        className: \"modalVote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Rating: \", this.state.movie.vote_average), tmpId.length > 0 ? React.createElement(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: \"https://www.youtube.com/embed/\".concat(tmpId),\n        frameBorder: \"0\",\n        title: \"youtube\",\n        allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Loading...\")), React.createElement(\"button\", {\n        className: \"modalClose\",\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"X\")));\n    }\n  }]);\n\n  return SimilarMovies;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    similar: state.movTv.similar,\n    videos: state.movTv.videos\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchVideo: fetchVideo\n})(SimilarMovies);","map":{"version":3,"sources":["C:\\Users\\wonde\\Desktop\\react\\traiflix\\traiflix\\src\\components\\similarMovies.js"],"names":["React","connect","Modal","FontAwesomeIcon","Slider","fetchVideo","img_url","customStyles","content","top","left","right","bottom","marginRight","transform","color","background","width","setAppElement","SimilarMovies","state","modalIsOpen","movie","id","release_date","vote_average","title","openModal","bind","afterOpenModal","closeModal","setState","props","subtitle","style","similar","length","results","map","sm","poster_path","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","rtl","className","tmpId","videos","key","Component","mapStateToProps","movTv"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Slider from 'react-slick';\r\n\r\nimport { fetchVideo } from '../store/actions/homepageActions';\r\n\r\n\r\nconst img_url = 'https://image.tmdb.org/t/p/original';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      color                 : 'white',\r\n      background: '#080a0a none repeat scroll 0% 0%',\r\n      width: '600px',\r\n    }\r\n  };\r\n  \r\nModal.setAppElement('#root')\r\n  \r\n\r\nclass SimilarMovies extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            modalIsOpen: false,\r\n            movie: {\r\n                id: '', release_date: '', vote_average: '', title: ''\r\n            }\r\n        };\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.afterOpenModal = this.afterOpenModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    openModal(movie){\r\n        this.setState({modalIsOpen: true, movie: movie});\r\n        this.props.fetchVideo(movie);\r\n    }\r\n\r\n    afterOpenModal(){\r\n        this.subtitle.style.color = '#f00';\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({modalIsOpen: false, movie: ''});\r\n    }\r\n\r\n        render(){\r\n        let similar;\r\n        if (this.props.similar.length > 0){\r\n            //console.log(props.similar[0].results)\r\n            similar = this.props.similar[0].results.map(sm => (\r\n                    <div className='sliderbox' key={sm.id}>\r\n                        <div className='text-block'>\r\n                            <h5 className='sliderTitle'>{sm.title}</h5>\r\n                            <FontAwesomeIcon onClick={() => this.openModal(sm)} icon=\"plus-circle\" className='sliderIcon' />\r\n                            <p className='sliderRelease'>{sm.release_date}</p>\r\n                            <p className='sliderVote'>{sm.vote_average}</p>\r\n                        </div>\r\n                        <img className='sliderImg' src={`${img_url}${sm.poster_path}`} alt={sm.title} />\r\n                    </div>\r\n            ));\r\n        }\r\n\r\n        const settings = {\r\n            dots: true,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 6,\r\n            slidesToScroll: 1,\r\n            initialSlide: 0,\r\n            rtl: false,\r\n            className: 'innerSliderDiv',\r\n        };\r\n\r\n        let tmpId = this.props.videos.length > 0 ? this.props.videos[0][0].key : '';\r\n        return (\r\n            <div>\r\n                <Slider {...settings}>\r\n                    {similar}\r\n                </Slider>\r\n                <Modal\r\n                isOpen={this.state.modalIsOpen}\r\n                onAfterOpen={this.afterOpenModal}\r\n                onRequestClose={this.closeModal}\r\n                style={customStyles}\r\n                contentLabel='similar movie modal'\r\n                >\r\n                <h2 ref={subtitle => this.subtitle = subtitle}>{this.state.movie.title}</h2>\r\n                    <div>\r\n                    <p>Id: {this.state.movie.id}</p>\r\n                    <h5 className='modalRelease'>Released: {this.state.movie.release_date}</h5>\r\n                    <h5 className='modalVote'>Rating: {this.state.movie.vote_average}</h5>\r\n                    {tmpId.length >0 ?<iframe width=\"560\" height=\"315\" src={`https://www.youtube.com/embed/${tmpId}`} frameBorder=\"0\" title='youtube' allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe> : <p className='loading'>Loading...</p>}\r\n                    </div>\r\n                <button className='modalClose' onClick={this.closeModal}>X</button>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        similar: state.movTv.similar,\r\n        videos: state.movTv.videos\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchVideo })(SimilarMovies);"]},"metadata":{},"sourceType":"module"}