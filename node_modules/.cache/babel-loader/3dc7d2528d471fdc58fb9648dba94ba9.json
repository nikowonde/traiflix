{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\src\\\\components\\\\Tv-Shows\\\\animationTv.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Slider from 'react-slick';\nimport Modal from 'react-modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fetchTvVideo } from '../../store/actions/tvshowpageActions';\nvar img_url = 'https://image.tmdb.org/t/p/original';\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    color: 'white',\n    background: '#080a0a none repeat scroll 0% 0%',\n    width: '600px'\n  }\n};\nModal.setAppElement('#root');\n\nvar Anim =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Anim, _React$Component);\n\n  function Anim() {\n    var _this;\n\n    _classCallCheck(this, Anim);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Anim).call(this));\n    _this.state = {\n      modalIsOpen: false,\n      tv: {\n        id: '',\n        first_air_date: '',\n        vote_average: '',\n        title: ''\n      }\n    };\n    _this.openModal = _this.openModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.afterOpenModal = _this.afterOpenModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Anim, [{\n    key: \"openModal\",\n    value: function openModal(tv) {\n      this.setState({\n        modalIsOpen: true,\n        tv: tv\n      }); //console.log(tv);\n      //console.log(tv.id);\n\n      this.props.fetchTvVideo(tv);\n    }\n  }, {\n    key: \"afterOpenModal\",\n    value: function afterOpenModal() {\n      this.subtitle.style.color = '#f00';\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        modalIsOpen: false,\n        tv: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //send same mapped data from this into the modal when clicked on the button <FontAwesomeIcon onClick....\n      var anim;\n\n      if (this.props.anim.length > 0) {\n        anim = this.props.anim[0].results.map(function (an) {\n          return React.createElement(\"div\", {\n            className: \"sliderbox\",\n            key: an.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"text-block\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"sliderTitle\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, an.name), React.createElement(FontAwesomeIcon, {\n            onClick: function onClick() {\n              return _this2.openModal(an);\n            },\n            icon: \"plus-circle\",\n            className: \"sliderIcon\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            className: \"sliderRelease\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, an.first_air_date), React.createElement(\"p\", {\n            className: \"sliderVote\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, an.vote_average)), React.createElement(\"img\", {\n            className: \"sliderImg\",\n            src: \"\".concat(img_url).concat(an.poster_path),\n            alt: an.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }));\n        });\n      }\n\n      var settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 6,\n        slidesToScroll: 1,\n        draggable: true,\n        adaptiveHeight: true,\n        className: 'innerSliderDiv',\n        fade: false,\n        swipeToSlide: true,\n        touchThreshold: 15,\n        lazyLoad: true,\n        responsive: [{\n          breakpoint: 576,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 1,\n            dots: false,\n            initialSlide: 0,\n            lazyLoad: true,\n            adaptiveHeight: true,\n            touchThreshold: 15,\n            variableWidth: true,\n            infinite: false\n          }\n        }, {\n          breakpoint: 768,\n          settings: {\n            slidesToShow: 3,\n            slidesToScroll: 1,\n            dots: false,\n            lazyLoad: true,\n            adaptiveHeight: true,\n            touchThreshold: 15,\n            variableWidth: true,\n            infinite: false\n          }\n        }, {\n          breakpoint: 992,\n          settings: {\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            dots: false,\n            lazyLoad: true,\n            adaptiveHeight: true,\n            touchThreshold: 15,\n            variableWidth: true,\n            infinite: false\n          }\n        }, {\n          breakpoint: 1024,\n          settings: {\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            dots: false,\n            lazyLoad: true,\n            adaptiveHeight: true,\n            touchThreshold: 15,\n            variableWidth: true,\n            infinite: false\n          }\n        }, {\n          breakpoint: 1362,\n          settings: {\n            slidesToShow: 5,\n            slidesToScroll: 1,\n            dots: true,\n            lazyLoad: true,\n            adaptiveHeight: true,\n            touchThreshold: 15,\n            variableWidth: true\n          }\n        }]\n      }; //console.log(this.props.anim.length > 0 ? this.anim : 'its empty');\n\n      var tmpId = this.props.videos.length > 0 ? this.props.videos[0][0].key : '';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Slider, Object.assign({}, settings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), anim), React.createElement(Modal, {\n        isOpen: this.state.modalIsOpen,\n        onAfterOpen: this.afterOpenModal,\n        onRequestClose: this.closeModal,\n        style: customStyles,\n        contentLabel: \"tv modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        ref: function ref(subtitle) {\n          return _this2.subtitle = subtitle;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, this.state.tv.name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Id: \", this.state.tv.id), React.createElement(\"h5\", {\n        className: \"modalRelease\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Released: \", this.state.tv.first_air_date), React.createElement(\"h5\", {\n        className: \"modalVote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Rating: \", this.state.tv.vote_average), tmpId.length > 0 ? React.createElement(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: \"https://www.youtube.com/embed/\".concat(tmpId),\n        frameBorder: \"0\",\n        title: \"youtube\",\n        allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        className: \"videoFrame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Loading...\")), React.createElement(\"button\", {\n        className: \"modalClose\",\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"X\")));\n    }\n  }]);\n\n  return Anim;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    anim: state.tv.anim,\n    videos: state.movTv.videostv\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTvVideo: fetchTvVideo\n})(Anim);","map":{"version":3,"sources":["C:\\Users\\wonde\\Desktop\\react\\traiflix\\traiflix\\src\\components\\Tv-Shows\\animationTv.js"],"names":["React","connect","Slider","Modal","FontAwesomeIcon","fetchTvVideo","img_url","customStyles","content","top","left","right","bottom","marginRight","transform","color","background","width","setAppElement","Anim","state","modalIsOpen","tv","id","first_air_date","vote_average","title","openModal","bind","afterOpenModal","closeModal","setState","props","subtitle","style","anim","length","results","map","an","name","poster_path","settings","dots","infinite","speed","slidesToShow","slidesToScroll","draggable","adaptiveHeight","className","fade","swipeToSlide","touchThreshold","lazyLoad","responsive","breakpoint","initialSlide","variableWidth","tmpId","videos","key","Component","mapStateToProps","movTv","videostv"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from 'react-slick';\r\nimport Modal from 'react-modal';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { fetchTvVideo } from '../../store/actions/tvshowpageActions';\r\n\r\nconst img_url = 'https://image.tmdb.org/t/p/original';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        color: 'white',\r\n        background: '#080a0a none repeat scroll 0% 0%',\r\n        width: '600px',\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nclass Anim extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            modalIsOpen: false,\r\n            tv: {\r\n                id: '', first_air_date: '', vote_average: '', title: ''\r\n            }\r\n        };\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.afterOpenModal = this.afterOpenModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n\r\n\r\n    }\r\n\r\n    openModal(tv) {\r\n        this.setState({ modalIsOpen: true, tv: tv });\r\n        //console.log(tv);\r\n        //console.log(tv.id);\r\n        this.props.fetchTvVideo(tv);\r\n    }\r\n\r\n    afterOpenModal() {\r\n        this.subtitle.style.color = '#f00';\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ modalIsOpen: false, tv: '' });\r\n    }\r\n\r\n    render() {\r\n        //send same mapped data from this into the modal when clicked on the button <FontAwesomeIcon onClick....\r\n        let anim;\r\n        if (this.props.anim.length > 0) {\r\n            anim = this.props.anim[0].results.map(an => (\r\n                <div className='sliderbox' key={an.id}>\r\n                    <div className='text-block'>\r\n                        <h5 className='sliderTitle'>{an.name}</h5>\r\n                        <FontAwesomeIcon onClick={() => this.openModal(an)} icon=\"plus-circle\" className='sliderIcon' />\r\n                        <p className='sliderRelease'>{an.first_air_date}</p>\r\n                        <p className='sliderVote'>{an.vote_average}</p>\r\n                    </div>\r\n                    <img className='sliderImg' src={`${img_url}${an.poster_path}`} alt={an.name} />\r\n                </div>\r\n            ));\r\n        }\r\n\r\n        const settings = {\r\n            dots: true,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 6,\r\n            slidesToScroll: 1,\r\n            draggable: true,\r\n            adaptiveHeight: true,\r\n            className: 'innerSliderDiv',\r\n            fade: false,\r\n            swipeToSlide: true,\r\n            touchThreshold: 15,\r\n            lazyLoad: true,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 576,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1,\r\n                        dots: false,\r\n                        initialSlide: 0,\r\n                        lazyLoad: true,\r\n                        adaptiveHeight: true,\r\n                        touchThreshold: 15,\r\n                        variableWidth: true,\r\n                        infinite: false,\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 768,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                        slidesToScroll: 1,\r\n                        dots: false,\r\n                        lazyLoad: true,\r\n                        adaptiveHeight: true,\r\n                        touchThreshold: 15,\r\n                        variableWidth: true,\r\n                        infinite: false,\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 992,\r\n                    settings: {\r\n                        slidesToShow: 4,\r\n                        slidesToScroll: 1,\r\n                        dots: false,\r\n                        lazyLoad: true,\r\n                        adaptiveHeight: true,\r\n                        touchThreshold: 15,\r\n                        variableWidth: true,\r\n                        infinite: false,\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 4,\r\n                        slidesToScroll: 1,\r\n                        dots: false,\r\n                        lazyLoad: true,\r\n                        adaptiveHeight: true,\r\n                        touchThreshold: 15,\r\n                        variableWidth: true,\r\n                        infinite: false,\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 1362,\r\n                    settings: {\r\n                        slidesToShow: 5,\r\n                        slidesToScroll: 1,\r\n                        dots: true,\r\n                        lazyLoad: true,\r\n                        adaptiveHeight: true,\r\n                        touchThreshold: 15,\r\n                        variableWidth: true,\r\n                    }\r\n                },\r\n            ]\r\n        };\r\n\r\n        //console.log(this.props.anim.length > 0 ? this.anim : 'its empty');\r\n\r\n        let tmpId = this.props.videos.length > 0 ? this.props.videos[0][0].key : '';\r\n        return (\r\n            <div>\r\n                <Slider {...settings}>\r\n                    {anim}\r\n                </Slider>\r\n                <Modal\r\n                    isOpen={this.state.modalIsOpen}\r\n                    onAfterOpen={this.afterOpenModal}\r\n                    onRequestClose={this.closeModal}\r\n                    style={customStyles}\r\n                    contentLabel='tv modal'\r\n                >\r\n                    {\r\n                        //Would like to print relative data here\r\n                    }\r\n                    <h2 ref={subtitle => this.subtitle = subtitle}>{this.state.tv.name}</h2>\r\n                    <div>\r\n                        <p>Id: {this.state.tv.id}</p>\r\n                        <h5 className='modalRelease'>Released: {this.state.tv.first_air_date}</h5>\r\n                        <h5 className='modalVote'>Rating: {this.state.tv.vote_average}</h5>\r\n                        {tmpId.length > 0 ? <iframe width=\"560\" height=\"315\" src={`https://www.youtube.com/embed/${tmpId}`} frameBorder=\"0\" title='youtube' allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen className='videoFrame'></iframe> : <p className='loading'>Loading...</p>}\r\n                    </div>\r\n                    <button className='modalClose' onClick={this.closeModal}>X</button>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        anim: state.tv.anim,\r\n        videos: state.movTv.videostv\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchTvVideo })(Anim);"]},"metadata":{},"sourceType":"module"}