{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\src\\\\components\\\\trending.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Slider from 'react-slick';\nimport { fetchVideo } from '../store/actions/homepageActions';\nvar img_url = 'https://image.tmdb.org/t/p/original';\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    color: 'white',\n    background: '#080a0a none repeat scroll 0% 0%',\n    width: '600px'\n  }\n};\nModal.setAppElement('#root');\n\nvar Trending =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Trending, _React$Component);\n\n  function Trending() {\n    var _this;\n\n    _classCallCheck(this, Trending);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Trending).call(this));\n    _this.state = {\n      modalIsOpen: false,\n      movie: {\n        id: '',\n        release_date: '',\n        vote_average: '',\n        title: ''\n      }\n    };\n    _this.openModal = _this.openModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.afterOpenModal = _this.afterOpenModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Trending, [{\n    key: \"openModal\",\n    value: function openModal(movie) {\n      this.setState({\n        modalIsOpen: true,\n        movie: movie\n      });\n      this.props.fetchVideo(movie);\n    }\n  }, {\n    key: \"afterOpenModal\",\n    value: function afterOpenModal() {\n      this.subtitle.style.color = '#f00';\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        modalIsOpen: false,\n        movie: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var trending;\n\n      if (this.props.trending.length > 0) {\n        //console.log(props.trending[0].results)\n        trending = this.props.trending[0].results.map(function (tr) {\n          return React.createElement(\"div\", {\n            className: \"sliderbox\",\n            key: tr.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"text-block\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"sliderTitle\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, tr.title), React.createElement(FontAwesomeIcon, {\n            onClick: function onClick() {\n              return _this2.openModal(tr);\n            },\n            icon: \"plus-circle\",\n            className: \"sliderIcon\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            className: \"sliderRelease\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, tr.release_date), React.createElement(\"p\", {\n            className: \"sliderVote\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, tr.vote_average)), React.createElement(\"img\", {\n            className: \"sliderImg\",\n            src: \"\".concat(img_url).concat(tr.poster_path),\n            alt: tr.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }));\n        });\n      }\n\n      var settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 6,\n        slidesToScroll: 1,\n        draggable: true,\n        adaptiveHeight: true,\n        className: 'innerSliderDiv',\n        fade: false,\n        swipeToSlide: true,\n        touchThreshold: 15,\n        lazyLoad: true,\n        responsive: [{\n          breakpoint: 576,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 1,\n            dots: true,\n            initialSlide: 0,\n            lazyLoad: true,\n            adaptiveHeight: false\n          }\n        }]\n      };\n      var tmpId = this.props.videos.length > 0 ? this.props.videos[0][0].key : '';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Slider, Object.assign({}, settings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), trending), React.createElement(Modal, {\n        isOpen: this.state.modalIsOpen,\n        onAfterOpen: this.afterOpenModal,\n        onRequestClose: this.closeModal,\n        style: customStyles,\n        contentLabel: \"similar movie modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        ref: function ref(subtitle) {\n          return _this2.subtitle = subtitle;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.state.movie.title), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Id: \", this.state.movie.id), React.createElement(\"h5\", {\n        className: \"modalRelease\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Released: \", this.state.movie.release_date), React.createElement(\"h5\", {\n        className: \"modalVote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Rating: \", this.state.movie.vote_average), tmpId.length > 0 ? React.createElement(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: \"https://www.youtube.com/embed/\".concat(tmpId),\n        frameBorder: \"0\",\n        title: \"youtube\",\n        allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        className: \"videoFrame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Loading...\")), React.createElement(\"button\", {\n        className: \"modalClose\",\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"X\")));\n    }\n  }]);\n\n  return Trending;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    trending: state.movTv.trending,\n    videos: state.movTv.videos\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchVideo: fetchVideo\n})(Trending); //poster={tr.results.poster_path} title={tr.results.title} description={tr.results.overview} release={tr.results.release_date} key={tr.results[0].id}\n\n/*\r\n            <div classNameName='col-sm' key={tr.results[0].id}>\r\n                <img classNameName='sliderImg' src={tr.results[0].poster_path} alt={tr.results.title} />\r\n                <h4 classNameName='sliderTitle'>{tr.results[0].title}</h4>\r\n                <p classNameName='sliderDescription'>{tr.results[0].overview}</p>\r\n            </div>\r\n\r\n\r\n\r\n*/","map":{"version":3,"sources":["C:\\Users\\wonde\\Desktop\\react\\traiflix\\traiflix\\src\\components\\trending.js"],"names":["React","connect","Modal","FontAwesomeIcon","Slider","fetchVideo","img_url","customStyles","content","top","left","right","bottom","marginRight","transform","color","background","width","setAppElement","Trending","state","modalIsOpen","movie","id","release_date","vote_average","title","openModal","bind","afterOpenModal","closeModal","setState","props","subtitle","style","trending","length","results","map","tr","poster_path","settings","dots","infinite","speed","slidesToShow","slidesToScroll","draggable","adaptiveHeight","className","fade","swipeToSlide","touchThreshold","lazyLoad","responsive","breakpoint","initialSlide","tmpId","videos","key","Component","mapStateToProps","movTv"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Slider from 'react-slick';\r\n\r\nimport { fetchVideo } from '../store/actions/homepageActions';\r\n\r\nconst img_url = 'https://image.tmdb.org/t/p/original';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        color: 'white',\r\n        background: '#080a0a none repeat scroll 0% 0%',\r\n        width: '600px',\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nclass Trending extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            modalIsOpen: false,\r\n            movie: {\r\n                id: '', release_date: '', vote_average: '', title: ''\r\n            }\r\n        };\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.afterOpenModal = this.afterOpenModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    openModal(movie) {\r\n        this.setState({ modalIsOpen: true, movie: movie });\r\n        this.props.fetchVideo(movie);\r\n    }\r\n\r\n    afterOpenModal() {\r\n        this.subtitle.style.color = '#f00';\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ modalIsOpen: false, movie: '' });\r\n    }\r\n\r\n    render() {\r\n        let trending;\r\n        if (this.props.trending.length > 0) {\r\n            //console.log(props.trending[0].results)\r\n            trending = this.props.trending[0].results.map(tr => (\r\n                <div className='sliderbox' key={tr.id}>\r\n                    <div className='text-block'>\r\n                        <h5 className='sliderTitle'>{tr.title}</h5>\r\n                        <FontAwesomeIcon onClick={() => this.openModal(tr)} icon=\"plus-circle\" className='sliderIcon' />\r\n                        <p className='sliderRelease'>{tr.release_date}</p>\r\n                        <p className='sliderVote'>{tr.vote_average}</p>\r\n                    </div>\r\n                    <img className='sliderImg' src={`${img_url}${tr.poster_path}`} alt={tr.title} />\r\n                </div>\r\n            ));\r\n        }\r\n\r\n        const settings = {\r\n            dots: true,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 6,\r\n            slidesToScroll: 1,\r\n            draggable: true,\r\n            adaptiveHeight: true,\r\n            className: 'innerSliderDiv',\r\n            fade: false,\r\n            swipeToSlide: true,\r\n            touchThreshold: 15,\r\n            lazyLoad: true,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 576,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1,\r\n                        dots: true,\r\n                        initialSlide: 0,\r\n                        lazyLoad: true,\r\n                        adaptiveHeight: false,\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n\r\n        let tmpId = this.props.videos.length > 0 ? this.props.videos[0][0].key : '';\r\n        return (\r\n            <div>\r\n                <Slider {...settings}>\r\n                    {trending}\r\n                </Slider>\r\n                <Modal\r\n                    isOpen={this.state.modalIsOpen}\r\n                    onAfterOpen={this.afterOpenModal}\r\n                    onRequestClose={this.closeModal}\r\n                    style={customStyles}\r\n                    contentLabel='similar movie modal'\r\n                >\r\n                    <h2 ref={subtitle => this.subtitle = subtitle}>{this.state.movie.title}</h2>\r\n                    <div>\r\n                        <p>Id: {this.state.movie.id}</p>\r\n                        <h5 className='modalRelease'>Released: {this.state.movie.release_date}</h5>\r\n                        <h5 className='modalVote'>Rating: {this.state.movie.vote_average}</h5>\r\n                        {tmpId.length > 0 ? <iframe width=\"560\" height=\"315\" src={`https://www.youtube.com/embed/${tmpId}`} frameBorder=\"0\" title='youtube' allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen className='videoFrame'></iframe> : <p className='loading'>Loading...</p>}\r\n                    </div>\r\n                    <button className='modalClose' onClick={this.closeModal}>X</button>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        trending: state.movTv.trending,\r\n        videos: state.movTv.videos\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchVideo })(Trending);\r\n\r\n//poster={tr.results.poster_path} title={tr.results.title} description={tr.results.overview} release={tr.results.release_date} key={tr.results[0].id}\r\n/*\r\n            <div classNameName='col-sm' key={tr.results[0].id}>\r\n                <img classNameName='sliderImg' src={tr.results[0].poster_path} alt={tr.results.title} />\r\n                <h4 classNameName='sliderTitle'>{tr.results[0].title}</h4>\r\n                <p classNameName='sliderDescription'>{tr.results[0].overview}</p>\r\n            </div>\r\n\r\n\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}