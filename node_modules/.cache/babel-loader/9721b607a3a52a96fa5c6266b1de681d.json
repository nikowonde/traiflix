{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\src\\\\components\\\\credits.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fetchTvVideoCredits } from '../store/actions/homepageActions';\nvar img_url = 'https://image.tmdb.org/t/p/original';\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    color: 'white',\n    background: '#080a0a none repeat scroll 0% 0%',\n    width: '600px'\n  }\n};\nModal.setAppElement('#root');\n\nvar SearchCredits =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchCredits, _Component);\n\n  function SearchCredits() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchCredits);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchCredits)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      modalIsOpen: false,\n      modal: {\n        media_type: '',\n        id: '',\n        release_date: '',\n        first_air_date: '',\n        vote_average: '',\n        title: '',\n        name: ''\n      }\n    };\n\n    _this.openModal = function (modal) {\n      _this.setState({\n        modalIsOpen: true,\n        modal: modal\n      });\n\n      _this.props.fetchTvVideoCredits(modal);\n    };\n\n    _this.afterOpenModal = function () {\n      _this.subtitle.style.color = '#f00';\n    };\n\n    _this.closeModal = function () {\n      _this.setState({\n        modalIsOpen: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchCredits, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var credits;\n\n      if (this.props.credits.length > 0) {\n        credits = this.props.credits[0].cast.sort(function (a, b) {\n          return parseFloat(b.vote_average) - parseFloat(a.vote_average);\n        }).map(function (cr) {\n          if (cr.poster_path !== null && cr.title !== null && cr.name !== null && cr.character !== '' && cr.character !== 'Himself' && (cr.media_type === 'tv' ? cr.name.length < 20 : cr.title.length < 20) && cr.vote_average > 5) {\n            return React.createElement(\"div\", {\n              className: \"-col-md-4 credit-box\",\n              key: cr.media_type === 'tv' ? cr.credit_id : cr.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"credit-block\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56\n              },\n              __self: this\n            }, React.createElement(\"h5\", {\n              className: \"search-title\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            }, \"\".concat(cr.media_type === 'tv' ? cr.name : cr.title)), React.createElement(\"p\", {\n              className: \"search-release\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58\n              },\n              __self: this\n            }, \"\".concat(cr.media_type === 'tv' ? cr.first_air_date : cr.release_date)), React.createElement(\"p\", {\n              className: \"search-vote\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            }, cr.vote_average)), React.createElement(FontAwesomeIcon, {\n              onClick: function onClick() {\n                return _this2.openModal(cr);\n              },\n              icon: \"plus-circle\",\n              className: \"CreditIcon\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              className: \"credit-modal\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              className: \"search-image\",\n              id: \"credit-image\",\n              src: \"\".concat(img_url).concat(cr.poster_path),\n              alt: cr.title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63\n              },\n              __self: this\n            })));\n          }\n        });\n      }\n\n      var tmpId = this.props.videos.length > 0 ? this.props.videos[0][0].key : '';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, credits), React.createElement(Modal, {\n        isOpen: this.state.modalIsOpen,\n        onAfterOpen: this.afterOpenModal,\n        onRequestClose: this.closeModal,\n        style: customStyles,\n        contentLabel: \"Credits modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        ref: function ref(subtitle) {\n          return _this2.subtitle = subtitle;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.state.modal.media_type === 'tv' ? this.state.modal.name : this.state.modal.title), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Id: \", this.state.modal.id), React.createElement(\"h5\", {\n        className: \"modalRelease\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Released: \", this.state.modal.media_type === 'tv' ? this.state.modal.first_air_date : this.state.modal.release_date), React.createElement(\"h5\", {\n        className: \"modalVote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Rating: \", this.state.modal.vote_average), tmpId.length > 0 ? React.createElement(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: \"https://www.youtube.com/embed/\".concat(tmpId),\n        frameBorder: \"0\",\n        title: \"youtube\",\n        allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Loading...\")), React.createElement(\"button\", {\n        className: \"modalClose\",\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"X\")));\n    }\n  }]);\n\n  return SearchCredits;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    credits: state.movTv.credits,\n    videos: state.movTv.videos\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTvVideoCredits: fetchTvVideoCredits\n})(SearchCredits);","map":{"version":3,"sources":["C:\\Users\\wonde\\Desktop\\react\\traiflix\\traiflix\\src\\components\\credits.js"],"names":["React","Component","connect","Modal","FontAwesomeIcon","fetchTvVideoCredits","img_url","customStyles","content","top","left","right","bottom","marginRight","transform","color","background","width","setAppElement","SearchCredits","state","modalIsOpen","modal","media_type","id","release_date","first_air_date","vote_average","title","name","openModal","setState","props","afterOpenModal","subtitle","style","closeModal","credits","length","cast","sort","a","b","parseFloat","map","cr","poster_path","character","credit_id","tmpId","videos","key","mapStateToProps","movTv"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,mBAAT,QAAoC,kCAApC;AAEA,IAAMC,OAAO,GAAG,qCAAhB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAG;AACRC,IAAAA,GAAG,EAAqB,KADhB;AAERC,IAAAA,IAAI,EAAoB,KAFhB;AAGRC,IAAAA,KAAK,EAAmB,MAHhB;AAIRC,IAAAA,MAAM,EAAkB,MAJhB;AAKRC,IAAAA,WAAW,EAAa,MALhB;AAMRC,IAAAA,SAAS,EAAe,uBANhB;AAORC,IAAAA,KAAK,EAAmB,OAPhB;AAQRC,IAAAA,UAAU,EAAc,kCARhB;AASRC,IAAAA,KAAK,EAAmB;AAThB;AADO,CAArB;AAcAd,KAAK,CAACe,aAAN,CAAoB,OAApB;;IAEMC,a;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,WAAW,EAAE,KADT;AAEJC,MAAAA,KAAK,EAAE;AACHC,QAAAA,UAAU,EAAE,EADT;AACaC,QAAAA,EAAE,EAAE,EADjB;AACqBC,QAAAA,YAAY,EAAE,EADnC;AACuCC,QAAAA,cAAc,EAAE,EADvD;AAC2DC,QAAAA,YAAY,EAAE,EADzE;AAC6EC,QAAAA,KAAK,EAAE,EADpF;AACwFC,QAAAA,IAAI,EAAE;AAD9F;AAFH,K;;UAORC,S,GAAY,UAACR,KAAD,EAAW;AACnB,YAAKS,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAE,IAAf;AAAqBC,QAAAA,KAAK,EAAEA;AAA5B,OAAd;;AACA,YAAKU,KAAL,CAAW3B,mBAAX,CAA+BiB,KAA/B;AACH,K;;UAEDW,c,GAAiB,YAAM;AACnB,YAAKC,QAAL,CAAcC,KAAd,CAAoBpB,KAApB,GAA4B,MAA5B;AACH,K;;UAEDqB,U,GAAa,YAAM;AACf,YAAKL,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH,K;;;;;;;6BAEO;AAAA;;AAER,UAAIgB,OAAJ;;AACI,UAAG,KAAKL,KAAL,CAAWK,OAAX,CAAmBC,MAAnB,GAA4B,CAA/B,EAAiC;AAC7BD,QAAAA,OAAO,GAAG,KAAKL,KAAL,CAAWK,OAAX,CAAmB,CAAnB,EAAsBE,IAAtB,CAA2BC,IAA3B,CAAgC,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUC,UAAU,CAACD,CAAC,CAACf,YAAH,CAAV,GAA6BgB,UAAU,CAACF,CAAC,CAACd,YAAH,CAAjD;AAAA,SAAhC,EAAmGiB,GAAnG,CAAuG,UAAAC,EAAE,EAAI;AACvH,cAAGA,EAAE,CAACC,WAAH,KAAmB,IAAnB,IAA2BD,EAAE,CAACjB,KAAH,KAAa,IAAxC,IAAgDiB,EAAE,CAAChB,IAAH,KAAY,IAA5D,IAAoEgB,EAAE,CAACE,SAAH,KAAiB,EAArF,IAA2FF,EAAE,CAACE,SAAH,KAAiB,SAA5G,KAA2HF,EAAE,CAACtB,UAAH,KAAiB,IAAjB,GAAwBsB,EAAE,CAAChB,IAAH,CAAQS,MAAR,GAAiB,EAAzC,GAA8CO,EAAE,CAACjB,KAAH,CAASU,MAAT,GAAkB,EAA3L,KAAmMO,EAAE,CAAClB,YAAH,GAAkB,CAAxN,EAA2N;AACvN,mBACI;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAsC,cAAA,GAAG,EAAEkB,EAAE,CAACtB,UAAH,KAAkB,IAAlB,GAAyBsB,EAAE,CAACG,SAA5B,GAAwCH,EAAE,CAACrB,EAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAI,cAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAiCqB,EAAE,CAACtB,UAAH,KAAkB,IAAlB,GAAyBsB,EAAE,CAAChB,IAA5B,GAAmCgB,EAAE,CAACjB,KAAvE,EADJ,EAEI;AAAG,cAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkCiB,EAAE,CAACtB,UAAH,KAAkB,IAAlB,GAAyBsB,EAAE,CAACnB,cAA5B,GAA6CmB,EAAE,CAACpB,YAAlF,EAFJ,EAGI;AAAG,cAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA4BoB,EAAE,CAAClB,YAA/B,CAHJ,CADJ,EAMI,oBAAC,eAAD;AAAiB,cAAA,OAAO,EAAE;AAAA,uBAAM,MAAI,CAACG,SAAL,CAAee,EAAf,CAAN;AAAA,eAA1B;AAAoD,cAAA,IAAI,EAAC,aAAzD;AAAuE,cAAA,SAAS,EAAC,YAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,EAOI;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAK,cAAA,SAAS,EAAC,cAAf;AAA8B,cAAA,EAAE,EAAC,cAAjC;AAAgD,cAAA,GAAG,YAAKvC,OAAL,SAAeuC,EAAE,CAACC,WAAlB,CAAnD;AAAoF,cAAA,GAAG,EAAED,EAAE,CAACjB,KAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAPJ,CADJ;AAYC;AACR,SAfa,CAAV;AAgBH;;AAED,UAAIqB,KAAK,GAAG,KAAKjB,KAAL,CAAWkB,MAAX,CAAkBZ,MAAlB,GAA2B,CAA3B,GAA+B,KAAKN,KAAL,CAAWkB,MAAX,CAAkB,CAAlB,EAAqB,CAArB,EAAwBC,GAAvD,GAA6D,EAAzE;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKd,OADL,CADJ,EAII,oBAAC,KAAD;AACA,QAAA,MAAM,EAAE,KAAKjB,KAAL,CAAWC,WADnB;AAEA,QAAA,WAAW,EAAE,KAAKY,cAFlB;AAGA,QAAA,cAAc,EAAE,KAAKG,UAHrB;AAIA,QAAA,KAAK,EAAE7B,YAJP;AAKA,QAAA,YAAY,EAAC,eALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOA;AAAI,QAAA,GAAG,EAAE,aAAA2B,QAAQ;AAAA,iBAAI,MAAI,CAACA,QAAL,GAAgBA,QAApB;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgD,KAAKd,KAAL,CAAWE,KAAX,CAAiBC,UAAjB,KAAgC,IAAhC,GAAuC,KAAKH,KAAL,CAAWE,KAAX,CAAiBO,IAAxD,GAA+D,KAAKT,KAAL,CAAWE,KAAX,CAAiBM,KAAhI,CAPA,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQ,KAAKR,KAAL,CAAWE,KAAX,CAAiBE,EAAzB,CADA,EAEA;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAwC,KAAKJ,KAAL,CAAWE,KAAX,CAAiBC,UAAjB,KAAgC,IAAhC,GAAuC,KAAKH,KAAL,CAAWE,KAAX,CAAiBI,cAAxD,GAAyE,KAAKN,KAAL,CAAWE,KAAX,CAAiBG,YAAlI,CAFA,EAGA;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmC,KAAKL,KAAL,CAAWE,KAAX,CAAiBK,YAApD,CAHA,EAICsB,KAAK,CAACX,MAAN,GAAc,CAAd,GAAiB;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAoB,QAAA,MAAM,EAAC,KAA3B;AAAiC,QAAA,GAAG,0CAAmCW,KAAnC,CAApC;AAAgF,QAAA,WAAW,EAAC,GAA5F;AAAgG,QAAA,KAAK,EAAC,SAAtG;AAAgH,QAAA,KAAK,EAAC,yEAAtH;AAAgM,QAAA,eAAe,MAA/M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB,GAA6O;AAAG,QAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJ9O,CARJ,EAcA;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAE,KAAKb,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdA,CAJJ,CADJ;AAuBH;;;;EAnEuBnC,S;;AAuE5B,IAAMmD,eAAe,GAAG,SAAlBA,eAAkB,CAAChC,KAAD,EAAW;AAC/B,SAAO;AACHiB,IAAAA,OAAO,EAAEjB,KAAK,CAACiC,KAAN,CAAYhB,OADlB;AAEHa,IAAAA,MAAM,EAAE9B,KAAK,CAACiC,KAAN,CAAYH;AAFjB,GAAP;AAIH,CALD;;AAOA,eAAehD,OAAO,CAACkD,eAAD,EAAkB;AAAE/C,EAAAA,mBAAmB,EAAnBA;AAAF,CAAlB,CAAP,CAAkDc,aAAlD,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { fetchTvVideoCredits } from '../store/actions/homepageActions';\r\n\r\nconst img_url = 'https://image.tmdb.org/t/p/original';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      color                 : 'white',\r\n      background            : '#080a0a none repeat scroll 0% 0%',\r\n      width                 : '600px',\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nclass SearchCredits extends Component{\r\n    state = {\r\n        modalIsOpen: false,\r\n        modal: {\r\n            media_type: '', id: '', release_date: '', first_air_date: '', vote_average: '', title: '', name: ''\r\n        }\r\n    }\r\n\r\n    openModal = (modal) => {\r\n        this.setState({ modalIsOpen: true, modal: modal});\r\n        this.props.fetchTvVideoCredits(modal);\r\n    }\r\n\r\n    afterOpenModal = () => {\r\n        this.subtitle.style.color = '#f00';\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ modalIsOpen: false});\r\n    }\r\n\r\n    render(){\r\n\r\n    let credits;\r\n        if(this.props.credits.length > 0){\r\n            credits = this.props.credits[0].cast.sort((a, b) => parseFloat(b.vote_average) - parseFloat(a.vote_average)).map(cr => {\r\n            if(cr.poster_path !== null && cr.title !== null && cr.name !== null && cr.character !== '' && cr.character !== 'Himself' && ( cr.media_type=== 'tv' ? cr.name.length < 20 : cr.title.length < 20 ) && cr.vote_average > 5) {\r\n                return (\r\n                    <div className='-col-md-4 credit-box' key={cr.media_type === 'tv' ? cr.credit_id : cr.id}>\r\n                        <div className='credit-block'>\r\n                            <h5 className='search-title'>{`${cr.media_type === 'tv' ? cr.name : cr.title}`}</h5>\r\n                            <p className='search-release'>{`${cr.media_type === 'tv' ? cr.first_air_date : cr.release_date}`}</p>\r\n                            <p className='search-vote'>{cr.vote_average}</p>\r\n                        </div>\r\n                        <FontAwesomeIcon onClick={() => this.openModal(cr)} icon=\"plus-circle\" className='CreditIcon' />\r\n                        <div className='credit-modal'>\r\n                            <img className='search-image' id='credit-image' src={`${img_url}${cr.poster_path}`} alt={cr.title} />\r\n                        </div>\r\n                    </div>\r\n               )}\r\n        })\r\n        }\r\n\r\n        let tmpId = this.props.videos.length > 0 ? this.props.videos[0][0].key : '';\r\n        return (\r\n            <div>\r\n                <div className='row'>\r\n                    {credits}\r\n                </div>\r\n                <Modal\r\n                isOpen={this.state.modalIsOpen}\r\n                onAfterOpen={this.afterOpenModal}\r\n                onRequestClose={this.closeModal}\r\n                style={customStyles}\r\n                contentLabel='Credits modal'\r\n                >\r\n                <h2 ref={subtitle => this.subtitle = subtitle}>{this.state.modal.media_type === 'tv' ? this.state.modal.name : this.state.modal.title}</h2>\r\n                    <div>\r\n                    <p>Id: {this.state.modal.id}</p>\r\n                    <h5 className='modalRelease'>Released: {this.state.modal.media_type === 'tv' ? this.state.modal.first_air_date : this.state.modal.release_date}</h5>\r\n                    <h5 className='modalVote'>Rating: {this.state.modal.vote_average}</h5>\r\n                    {tmpId.length >0 ?<iframe width=\"560\" height=\"315\" src={`https://www.youtube.com/embed/${tmpId}`} frameBorder=\"0\" title='youtube' allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe> : <p className='loading'>Loading...</p>}\r\n                    </div>\r\n                <button className='modalClose' onClick={this.closeModal}>X</button>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        credits: state.movTv.credits,\r\n        videos: state.movTv.videos\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchTvVideoCredits })(SearchCredits);"]},"metadata":{},"sourceType":"module"}