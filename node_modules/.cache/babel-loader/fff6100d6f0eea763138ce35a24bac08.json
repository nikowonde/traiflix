{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\src\\\\components\\\\search.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport memoizeOne from 'memoize-one';\nimport { fetchPersonInfo } from '../store/actions/homepageActions';\nvar img_url = 'https://image.tmdb.org/t/p/original';\n\nvar SearchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchPage, _Component);\n\n  function SearchPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      personId: '',\n      pr: []\n    };\n    return _this;\n  }\n\n  _createClass(SearchPage, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      //this.props.fetchPersonInfo(this.state.personId)\n      var pid;\n\n      if (this.props.results.length > 0) {\n        if (this.props.results[0].results[0].media_type === 'person') {\n          this.setState({\n            pr: this.props.results[0].results[0]\n          });\n          pid = this.state.pr.id;\n          this.setState({\n            personId: pid\n          });\n        } else if (this.props.results[0].results[1].media_type === 'person') {\n          this.setState({\n            pr: this.props.results[0].results[1]\n          });\n          pid = this.state.pr.id;\n          this.setState({\n            personId: pid\n          });\n        } else if (this.props.results[0].results[2].media_type === 'person') {\n          this.setState({\n            pr: this.props.results[0].results[2]\n          });\n          pid = this.state.pr.id;\n          this.setState({\n            personId: pid\n          });\n        }\n      }\n      /*this.setState((state, props) => {\r\n          return {personId: pid};\r\n      })*/\n\n      /*this.setState({\r\n          personId: pid,\r\n      })*/\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var results;\n\n      if (this.props.results.length > 0) {\n        console.log(this.props.results[0].results[0].media_type);\n        console.log(this.state.pr.length);\n        console.log(this.state.personId);\n        results = this.props.results[0].results.map(function (rs) {\n          if (rs.media_type === 'movie' && rs.poster_path !== null) return React.createElement(\"div\", {\n            className: \".col-md-4 search-container\",\n            key: rs.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"search-results\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"search-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, rs.title), React.createElement(\"img\", {\n            className: \"search-image\",\n            src: \"\".concat(img_url).concat(rs.poster_path),\n            alt: rs.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            className: \"search-release\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, \"Released: \".concat(rs.release_date)), React.createElement(\"p\", {\n            className: \"search-vote\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, \"Rating: \".concat(rs.vote_average))));\n          if (rs.poster_path === 'null' || rs.poster_path === '') return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, null);\n          if (rs.media_type === 'tv' && rs.poster_path !== null) return React.createElement(\"div\", {\n            className: \".col-md-4 search-container\",\n            key: rs.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"search-results\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"search-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, rs.name), React.createElement(\"img\", {\n            className: \"search-image\",\n            src: \"\".concat(img_url).concat(rs.poster_path),\n            alt: rs.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            className: \"search-release\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, \"Aired: \".concat(rs.first_air_date)), React.createElement(\"p\", {\n            className: \"search-vote\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, \"Rating: \".concat(rs.vote_average))));\n          if (rs.poster_path === '' || rs.backdrop_path === '') return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, null);\n        });\n      }\n\n      if (this.props.results.length > 0 && this.state.pr.length > 0) {\n        if (this.props.results[0].results[0].media_type === 'person') {\n          console.log(this.props.results[0].results[0]);\n          console.log(this.state.pr);\n          console.log(this.state.pr.length);\n          return React.createElement(\"div\", {\n            className: \".col-md-4 search-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"search-results-person\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"search-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, this.state.pr.name), React.createElement(\"img\", {\n            className: \"search-image\",\n            src: \"\".concat(img_url).concat(this.state.pr.profile_path),\n            alt: this.state.pr.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          })));\n        } else if (this.props.results[0].results[1].media_type === 'person') {\n          console.log(this.state.pr);\n          return React.createElement(\"div\", {\n            className: \".col-md-4 search-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"search-results-person\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"search-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, this.state.pr.name), React.createElement(\"img\", {\n            className: \"search-image\",\n            src: \"\".concat(img_url).concat(this.state.pr.profile_path),\n            alt: this.state.pr.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          })));\n        } else if (this.props.results[0].results[2].media_type === 'person') {\n          console.log(this.state.pr);\n          return React.createElement(\"div\", {\n            className: \".col-md-4 search-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"search-results-person\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"search-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, this.state.pr.name), React.createElement(\"img\", {\n            className: \"search-image\",\n            src: \"\".concat(img_url).concat(this.state.pr.profile_path),\n            alt: this.state.pr.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          })));\n        } else {\n          return React.createElement(\"div\", {\n            className: \"loading\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, \"Loading...\");\n        }\n      }\n      /*let person;\r\n          if (props.person.length > 0){\r\n              person = props.person.map(person => {\r\n                })\r\n          }*/\n\n\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, results, this.state.personId, this.state.pr));\n    }\n  }]);\n\n  return SearchPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    results: state.movTv.results,\n    person: state.movTv.personInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPersonInfo: fetchPersonInfo\n})(SearchPage);","map":{"version":3,"sources":["C:\\Users\\wonde\\Desktop\\react\\traiflix\\traiflix\\src\\components\\search.js"],"names":["React","Component","connect","memoizeOne","fetchPersonInfo","img_url","SearchPage","state","personId","pr","pid","props","results","length","media_type","setState","id","console","log","map","rs","poster_path","title","release_date","vote_average","name","first_air_date","backdrop_path","profile_path","mapStateToProps","movTv","person","personInfo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport memoizeOne from 'memoize-one';\r\n\r\nimport { fetchPersonInfo } from '../store/actions/homepageActions'\r\n\r\nconst img_url = 'https://image.tmdb.org/t/p/original';\r\n\r\nclass SearchPage extends Component {\r\n    \r\n    state = {\r\n        personId: '',\r\n        pr: [],\r\n    }\r\n\r\n    componentWillReceiveProps(){\r\n            //this.props.fetchPersonInfo(this.state.personId)\r\n            let pid;\r\n            if(this.props.results.length > 0){\r\n                if (this.props.results[0].results[0].media_type === 'person'){\r\n                    this.setState({pr: this.props.results[0].results[0]});\r\n                    pid = this.state.pr.id;\r\n                    this.setState({personId: pid});\r\n                } else if (this.props.results[0].results[1].media_type === 'person'){\r\n                    this.setState({pr: this.props.results[0].results[1]})\r\n                    pid = this.state.pr.id;\r\n                    this.setState({personId: pid});\r\n                } else if (this.props.results[0].results[2].media_type === 'person'){\r\n                    this.setState({pr: this.props.results[0].results[2]})\r\n                    pid = this.state.pr.id;\r\n                    this.setState({personId: pid});\r\n                }\r\n            }\r\n            /*this.setState((state, props) => {\r\n                return {personId: pid};\r\n            })*/\r\n            /*this.setState({\r\n                personId: pid,\r\n            })*/\r\n        }\r\n        \r\n\r\n    render(){\r\n    let results;\r\n        if(this.props.results.length > 0){\r\n            console.log(this.props.results[0].results[0].media_type);\r\n            console.log(this.state.pr.length);\r\n            console.log(this.state.personId);\r\n            results = this.props.results[0].results.map(rs => {\r\n                if(rs.media_type === 'movie' && rs.poster_path !== null)\r\n                    return (\r\n                        <div className='.col-md-4 search-container' key={rs.id}>\r\n                            <div className='search-results'>\r\n                                <h5 className='search-title'>{rs.title}</h5>\r\n                                <img className='search-image' src={`${img_url}${rs.poster_path}`} alt={rs.title} />\r\n                                <p className='search-release'>{`Released: ${rs.release_date}`}</p>\r\n                                <p className='search-vote'>{`Rating: ${rs.vote_average}`}</p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                if (rs.poster_path === 'null' || rs.poster_path === '')\r\n                        return (<div>{null}</div>)\r\n                if (rs.media_type === 'tv' && rs.poster_path !== null)\r\n                    return (\r\n                    <div className='.col-md-4 search-container' key={rs.id}>\r\n                        <div className='search-results'>\r\n                            <h5 className='search-title'>{rs.name}</h5>\r\n                            <img className='search-image' src={`${img_url}${rs.poster_path}`} alt={rs.title} />\r\n                            <p className='search-release'>{`Aired: ${rs.first_air_date}`}</p>\r\n                            <p className='search-vote'>{`Rating: ${rs.vote_average}`}</p>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                if (rs.poster_path === '' || rs.backdrop_path === '')\r\n                        return (<div>{null}</div>);\r\n            } \r\n            )\r\n        }\r\n            if (this.props.results.length > 0 && this.state.pr.length > 0){\r\n                if (this.props.results[0].results[0].media_type === 'person'){\r\n                    console.log(this.props.results[0].results[0]);\r\n                    console.log(this.state.pr);\r\n                    console.log(this.state.pr.length);\r\n                    return (\r\n                        <div className='.col-md-4 search-container'>\r\n                                <div className='search-results-person'>\r\n                                    <h5 className='search-title'>{this.state.pr.name}</h5>\r\n                                    <img className='search-image' src={`${img_url}${this.state.pr.profile_path}`} alt={this.state.pr.name} />\r\n                                </div>\r\n                        </div>\r\n                    )\r\n                } else if (this.props.results[0].results[1].media_type === 'person'){\r\n                    console.log(this.state.pr);\r\n                    return (\r\n                        <div className='.col-md-4 search-container'>\r\n                                <div className='search-results-person'>\r\n                                    <h5 className='search-title'>{this.state.pr.name}</h5>\r\n                                    <img className='search-image' src={`${img_url}${this.state.pr.profile_path}`} alt={this.state.pr.name} />\r\n                                </div>\r\n                        </div>\r\n                    )\r\n                } else if (this.props.results[0].results[2].media_type === 'person'){\r\n                    console.log(this.state.pr);\r\n                    return (\r\n                        <div className='.col-md-4 search-container'>\r\n                                <div className='search-results-person'>\r\n                                    <h5 className='search-title'>{this.state.pr.name}</h5>\r\n                                    <img className='search-image' src={`${img_url}${this.state.pr.profile_path}`} alt={this.state.pr.name} />\r\n                                </div>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return <div className='loading'>Loading...</div>\r\n                }\r\n            }\r\n\r\n    /*let person;\r\n        if (props.person.length > 0){\r\n            person = props.person.map(person => {\r\n\r\n            })\r\n        }*/\r\n            return (\r\n                <div className='container-fluid'>\r\n                        <div className='row'>\r\n                                {results}\r\n                                {this.state.personId}\r\n                                {this.state.pr}\r\n                        </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        results: state.movTv.results,\r\n        person: state.movTv.personInfo\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchPersonInfo })(SearchPage);"]},"metadata":{},"sourceType":"module"}