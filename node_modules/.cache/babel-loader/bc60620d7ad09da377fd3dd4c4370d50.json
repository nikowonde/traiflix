{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\src\\\\components\\\\searchP.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPersonInfo } from '../store/actions/homepageActions';\nvar img_url = 'https://image.tmdb.org/t/p/original';\n\nvar SearchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchPage, _Component);\n\n  function SearchPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      personId: '',\n      pr: []\n    };\n    return _this;\n  }\n\n  _createClass(SearchPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var pid;\n\n      if (this.props.results.length > 0) {\n        if (this.props.results[0].results[0].media_type === 'person') {\n          this.setState({\n            pr: this.props.results[0].results[0]\n          });\n          pid = this.state.pr.id;\n        } else if (this.props.results[0].results[1].media_type === 'person') {\n          this.setState({\n            pr: this.props.results[0].results[1]\n          });\n          pid = this.state.pr.id;\n        } else if (this.props.results[0].results[2].media_type === 'person') {\n          this.setState({\n            pr: this.props.results[0].results[2]\n          });\n          pid = this.state.pr.id;\n        }\n\n        this.setState({\n          personId: pid\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.results.length > 0 && this.state.pr.length > 0) {\n        if (this.props.results[0].results[0].media_type === 'person') {\n          console.log(this.props.results[0].results[0]);\n          console.log(this.state.pr);\n          console.log(this.state.pr.length);\n          return React.createElement(\"div\", {\n            className: \".col-md-4 search-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"search-results-person\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"search-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, this.state.pr.name), React.createElement(\"img\", {\n            className: \"search-image\",\n            src: \"\".concat(img_url).concat(this.state.pr.profile_path),\n            alt: this.state.pr.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          })));\n        } else if (this.props.results[0].results[1].media_type === 'person') {\n          console.log(this.state.pr);\n          return React.createElement(\"div\", {\n            className: \".col-md-4 search-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"search-results-person\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"search-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, this.state.pr.name), React.createElement(\"img\", {\n            className: \"search-image\",\n            src: \"\".concat(img_url).concat(this.state.pr.profile_path),\n            alt: this.state.pr.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          })));\n        } else if (this.props.results[0].results[2].media_type === 'person') {\n          console.log(this.state.pr);\n          return React.createElement(\"div\", {\n            className: \".col-md-4 search-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"search-results-person\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"search-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, this.state.pr.name), React.createElement(\"img\", {\n            className: \"search-image\",\n            src: \"\".concat(img_url).concat(this.state.pr.profile_path),\n            alt: this.state.pr.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          })));\n        } else {\n          return React.createElement(\"div\", {\n            className: \"loading\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, \"Loading...\");\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.pr));\n    }\n  }]);\n\n  return SearchPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    results: state.movTv.results\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPersonInfo: fetchPersonInfo\n})(SearchPage);","map":{"version":3,"sources":["C:\\Users\\wonde\\Desktop\\react\\traiflix\\traiflix\\src\\components\\searchP.js"],"names":["React","Component","connect","fetchPersonInfo","img_url","SearchPage","state","personId","pr","pid","props","results","length","media_type","setState","id","console","log","name","profile_path","mapStateToProps","movTv"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { fetchPersonInfo} from '../store/actions/homepageActions';\r\n\r\nconst img_url = 'https://image.tmdb.org/t/p/original';\r\n\r\nclass SearchPage extends Component {\r\n    state = {\r\n        personId: '',\r\n        pr: [],\r\n    }\r\n\r\n    componentDidMount(){\r\n        let pid;\r\n        if(this.props.results.length > 0){\r\n            if(this.props.results[0].results[0].media_type === 'person'){\r\n                this.setState({pr: this.props.results[0].results[0]});\r\n                pid = this.state.pr.id;\r\n            } else if(this.props.results[0].results[1].media_type === 'person'){\r\n                this.setState({pr: this.props.results[0].results[1]});\r\n                pid = this.state.pr.id;\r\n            } else if(this.props.results[0].results[2].media_type === 'person'){\r\n                this.setState({pr: this.props.results[0].results[2]});\r\n                pid = this.state.pr.id;\r\n            }\r\n        this.setState({\r\n            personId: pid,\r\n        })\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        if (this.props.results.length > 0 && this.state.pr.length > 0){\r\n            if (this.props.results[0].results[0].media_type === 'person'){\r\n                console.log(this.props.results[0].results[0]);\r\n                console.log(this.state.pr);\r\n                console.log(this.state.pr.length);\r\n                return (\r\n                    <div className='.col-md-4 search-container'>\r\n                            <div className='search-results-person'>\r\n                                <h5 className='search-title'>{this.state.pr.name}</h5>\r\n                                <img className='search-image' src={`${img_url}${this.state.pr.profile_path}`} alt={this.state.pr.name} />\r\n                            </div>\r\n                    </div>\r\n                )\r\n            } else if (this.props.results[0].results[1].media_type === 'person'){\r\n                console.log(this.state.pr);\r\n                return (\r\n                    <div className='.col-md-4 search-container'>\r\n                            <div className='search-results-person'>\r\n                                <h5 className='search-title'>{this.state.pr.name}</h5>\r\n                                <img className='search-image' src={`${img_url}${this.state.pr.profile_path}`} alt={this.state.pr.name} />\r\n                            </div>\r\n                    </div>\r\n                )\r\n            } else if (this.props.results[0].results[2].media_type === 'person'){\r\n                console.log(this.state.pr);\r\n                return (\r\n                    <div className='.col-md-4 search-container'>\r\n                            <div className='search-results-person'>\r\n                                <h5 className='search-title'>{this.state.pr.name}</h5>\r\n                                <img className='search-image' src={`${img_url}${this.state.pr.profile_path}`} alt={this.state.pr.name} />\r\n                            </div>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return <div className='loading'>Loading...</div>\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='container-fluid'>\r\n                <div className='row'>\r\n                    {this.state.pr}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        results: state.movTv.results,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchPersonInfo})(SearchPage);"]},"metadata":{},"sourceType":"module"}