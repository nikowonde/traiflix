{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\src\\\\components\\\\credits.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nvar img_url = 'https://image.tmdb.org/t/p/original';\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    color: 'white',\n    background: '#080a0a none repeat scroll 0% 0%',\n    width: '600px'\n  }\n};\nModal.setAppElement('#root');\n\nvar SearchCredits =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchCredits, _Component);\n\n  function SearchCredits() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchCredits);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchCredits)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      modalIsOpen: false\n    };\n\n    _this.openModal = function () {\n      _this.setState({\n        modalIsOpen: true\n      });\n    };\n\n    _this.afterOpenModal = function () {\n      _this.subtitle.style.color = '#f00';\n    };\n\n    _this.closeModal = function () {\n      _this.setState({\n        modalIsOpen: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchCredits, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var credits;\n\n      if (this.props.credits.length > 0) {\n        credits = this.props.credits[0].cast.map(function (cr) {\n          if (cr.poster_path !== null && cr.title !== null) {\n            return React.createElement(\"div\", {\n              className: \"-col-md-4 credit-box\",\n              key: cr.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"credit-block\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53\n              },\n              __self: this\n            }, React.createElement(\"h5\", {\n              className: \"creditTitle\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54\n              },\n              __self: this\n            }, cr.title), React.createElement(FontAwesomeIcon, {\n              onClick: function onClick() {\n                return _this2.openModal(cr);\n              },\n              icon: \"plus-circle\",\n              className: \"sliderIcon\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55\n              },\n              __self: this\n            }), React.createElement(\"p\", {\n              className: \"creditRelease\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56\n              },\n              __self: this\n            }, cr.release_date), React.createElement(\"p\", {\n              className: \"creditVote\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            }, cr.vote_average)), React.createElement(\"img\", {\n              className: \"creditImg\",\n              src: \"\".concat(img_url).concat(cr.poster_path),\n              alt: cr.title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            }));\n          }\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, credits);\n    }\n  }]);\n\n  return SearchCredits;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    credits: state.movTv.credits\n  };\n};\n\nexport default connect(mapStateToProps, {})(SearchCredits);","map":{"version":3,"sources":["C:\\Users\\wonde\\Desktop\\react\\traiflix\\traiflix\\src\\components\\credits.js"],"names":["React","Component","connect","Modal","FontAwesomeIcon","img_url","customStyles","content","top","left","right","bottom","marginRight","transform","color","background","width","setAppElement","SearchCredits","state","modalIsOpen","openModal","setState","afterOpenModal","subtitle","style","closeModal","credits","props","length","cast","map","cr","poster_path","title","id","release_date","vote_average","mapStateToProps","movTv"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,IAAMC,OAAO,GAAG,qCAAhB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAG;AACRC,IAAAA,GAAG,EAAqB,KADhB;AAERC,IAAAA,IAAI,EAAoB,KAFhB;AAGRC,IAAAA,KAAK,EAAmB,MAHhB;AAIRC,IAAAA,MAAM,EAAkB,MAJhB;AAKRC,IAAAA,WAAW,EAAa,MALhB;AAMRC,IAAAA,SAAS,EAAe,uBANhB;AAORC,IAAAA,KAAK,EAAmB,OAPhB;AAQRC,IAAAA,UAAU,EAAc,kCARhB;AASRC,IAAAA,KAAK,EAAmB;AAThB;AADO,CAArB;AAcAb,KAAK,CAACc,aAAN,CAAoB,OAApB;;IAEMC,a;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,WAAW,EAAE;AADT,K;;UAKRC,S,GAAY,YAAM;AACd,YAAKC,QAAL,CAAc;AAAEF,QAAAA,WAAW,EAAE;AAAf,OAAd;AAEH,K;;UAEDG,c,GAAiB,YAAM;AACnB,YAAKC,QAAL,CAAcC,KAAd,CAAoBX,KAApB,GAA4B,MAA5B;AACH,K;;UAEDY,U,GAAa,YAAM;AACf,YAAKJ,QAAL,CAAc;AAAEF,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH,K;;;;;;;6BAEO;AAAA;;AAER,UAAIO,OAAJ;;AACI,UAAG,KAAKC,KAAL,CAAWD,OAAX,CAAmBE,MAAnB,GAA4B,CAA/B,EAAiC;AAC7BF,QAAAA,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAAX,CAAmB,CAAnB,EAAsBG,IAAtB,CAA2BC,GAA3B,CAA+B,UAAAC,EAAE,EAAI;AAC/C,cAAGA,EAAE,CAACC,WAAH,KAAmB,IAAnB,IAA2BD,EAAE,CAACE,KAAH,KAAa,IAA3C,EAAgD;AAC5C,mBACI;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAsC,cAAA,GAAG,EAAEF,EAAE,CAACG,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAI,cAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA6BH,EAAE,CAACE,KAAhC,CADJ,EAEI,oBAAC,eAAD;AAAiB,cAAA,OAAO,EAAE;AAAA,uBAAM,MAAI,CAACb,SAAL,CAAeW,EAAf,CAAN;AAAA,eAA1B;AAAoD,cAAA,IAAI,EAAC,aAAzD;AAAuE,cAAA,SAAS,EAAC,YAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAG,cAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA8BA,EAAE,CAACI,YAAjC,CAHJ,EAII;AAAG,cAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA2BJ,EAAE,CAACK,YAA9B,CAJJ,CADJ,EAOI;AAAK,cAAA,SAAS,EAAC,WAAf;AAA2B,cAAA,GAAG,YAAKhC,OAAL,SAAe2B,EAAE,CAACC,WAAlB,CAA9B;AAA+D,cAAA,GAAG,EAAED,EAAE,CAACE,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CADJ;AAUC;AACR,SAba,CAAV;AAcH;;AAED,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,OADL,CADJ;AAKH;;;;EA5CuB1B,S;;AAgD5B,IAAMqC,eAAe,GAAG,SAAlBA,eAAkB,CAACnB,KAAD,EAAW;AAC/B,SAAO;AACHQ,IAAAA,OAAO,EAAER,KAAK,CAACoB,KAAN,CAAYZ;AADlB,GAAP;AAGH,CAJD;;AAMA,eAAezB,OAAO,CAACoC,eAAD,EAAkB,EAAlB,CAAP,CAA6BpB,aAA7B,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst img_url = 'https://image.tmdb.org/t/p/original';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      color                 : 'white',\r\n      background            : '#080a0a none repeat scroll 0% 0%',\r\n      width                 : '600px',\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nclass SearchCredits extends Component{\r\n    state = {\r\n        modalIsOpen: false,\r\n\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({ modalIsOpen: true });\r\n\r\n    }\r\n\r\n    afterOpenModal = () => {\r\n        this.subtitle.style.color = '#f00';\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ modalIsOpen: false});\r\n    }\r\n\r\n    render(){\r\n\r\n    let credits;\r\n        if(this.props.credits.length > 0){\r\n            credits = this.props.credits[0].cast.map(cr => {\r\n            if(cr.poster_path !== null && cr.title !== null){\r\n                return (\r\n                    <div className='-col-md-4 credit-box' key={cr.id}>\r\n                        <div className='credit-block'>\r\n                            <h5 className='creditTitle'>{cr.title}</h5>\r\n                            <FontAwesomeIcon onClick={() => this.openModal(cr)} icon=\"plus-circle\" className='sliderIcon' />\r\n                            <p className='creditRelease'>{cr.release_date}</p>\r\n                            <p className='creditVote'>{cr.vote_average}</p>\r\n                        </div>\r\n                        <img className='creditImg' src={`${img_url}${cr.poster_path}`} alt={cr.title} />\r\n                    </div>\r\n               )}\r\n        })\r\n        }\r\n\r\n        return (\r\n            <div className='row'>\r\n                {credits}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        credits: state.movTv.credits\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(SearchCredits);"]},"metadata":{},"sourceType":"module"}