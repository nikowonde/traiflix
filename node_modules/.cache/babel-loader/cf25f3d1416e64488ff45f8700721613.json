{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\src\\\\components\\\\searchP.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPersonInfo } from '../store/actions/homepageActions';\nvar img_url = 'https://image.tmdb.org/t/p/original';\n\nvar SearchP =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchP, _React$Component);\n\n  function SearchP() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchP);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchP)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      personId: ''\n    };\n    return _this;\n  }\n\n  _createClass(SearchP, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isPerson = function isPerson(type) {\n        return type.media_type === 'person';\n      };\n\n      var pr;\n\n      if (this.props.results > 0) {\n        pr = this.props.results[0].results;\n        pr.find(isPerson);\n        console.log(pr);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SearchP;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    results: state.movTv.results,\n    person: state.movTv.personInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPersonInfo: fetchPersonInfo\n})(SearchP);","map":{"version":3,"sources":["C:\\Users\\wonde\\Desktop\\react\\traiflix\\traiflix\\src\\components\\searchP.js"],"names":["React","connect","fetchPersonInfo","img_url","SearchP","state","personId","isPerson","type","media_type","pr","props","results","find","console","log","Component","mapStateToProps","movTv","person","personInfo"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAASC,eAAT,QAAgC,kCAAhC;AAEA,IAAMC,OAAO,GAAG,qCAAhB;;IAEMC,O;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE;AADN,K;;;;;;wCAIW,CAElB;;;6BAGO;AAER,UAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACvB,eAAOA,IAAI,CAACC,UAAL,KAAoB,QAA3B;AACH,OAFD;;AAGA,UAAIC,EAAJ;;AACA,UAAG,KAAKC,KAAL,CAAWC,OAAX,GAAqB,CAAxB,EAA0B;AACtBF,QAAAA,EAAE,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmB,CAAnB,EAAsBA,OAA3B;AACAF,QAAAA,EAAE,CAACG,IAAH,CAAQN,QAAR;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ;AACH;;AAEG,aACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAOH;;;;EA9BiBV,KAAK,CAACgB,S;;AAkC5B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACZ,KAAD,EAAW;AAC3B,SAAO;AACHO,IAAAA,OAAO,EAAEP,KAAK,CAACa,KAAN,CAAYN,OADlB;AAEHO,IAAAA,MAAM,EAAEd,KAAK,CAACa,KAAN,CAAYE;AAFjB,GAAP;AAIH,CALL;;AAOA,eAAenB,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA,eAAe,EAAfA;AAAF,CAAlB,CAAP,CAA8CE,OAA9C,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { fetchPersonInfo } from '../store/actions/homepageActions';\r\n\r\nconst img_url = 'https://image.tmdb.org/t/p/original';\r\n\r\nclass SearchP extends React.Component {\r\n\r\n    state = {\r\n        personId: '',\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n    const isPerson = (type) => {\r\n        return type.media_type === 'person';\r\n    }\r\n    let pr\r\n    if(this.props.results > 0){\r\n        pr = this.props.results[0].results;\r\n        pr.find(isPerson);\r\n        console.log(pr);\r\n    }\r\n\r\n        return (\r\n            <div className='container-fluid'>\r\n                <div className='row'>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n        return {\r\n            results: state.movTv.results,\r\n            person: state.movTv.personInfo\r\n        }\r\n    }\r\n    \r\nexport default connect(mapStateToProps, { fetchPersonInfo })(SearchP);\r\n"]},"metadata":{},"sourceType":"module"}