{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\wonde\\\\Desktop\\\\react\\\\traiflix\\\\traiflix\\\\src\\\\components\\\\search.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPersonInfo, fetchPersonCredits } from '../store/actions/homepageActions';\nimport SearchCredits from './credits';\nvar img_url = 'https://image.tmdb.org/t/p/original';\n\nvar SearchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchPage, _Component);\n\n  function SearchPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      personId: '',\n      maxLength: 500,\n      read: 'Read More'\n    };\n\n    _this.componentDidUpdate = function () {\n      if (_this.props.results.length > 0 && _this.props.results[0].results[0] !== undefined && _this.state.personId !== _this.props.results[0].results[0].id) {\n        if (_this.props.results[0].results[0].media_type === 'person') {\n          _this.setState({\n            personId: _this.props.results[0].results[0].id,\n            read: 'Read More',\n            maxLength: 500\n          }, _this.props.fetchPersonInfo(_this.props.results[0].results[0].id), _this.props.fetchPersonCredits(_this.props.results[0].results[0].id));\n        }\n      } else if (_this.props.results.length > 0 && _this.props.results[0].results[1] !== undefined && _this.state.personId !== _this.props.results[0].results[1].id) {\n        if (_this.props.results[0].results[1].media_type === 'person' && _this.props.results[0].results[1].popularity > 2) {\n          _this.setState({\n            personId: _this.props.results[0].results[1].id,\n            read: 'Read More',\n            maxLength: 500\n          }, _this.props.fetchPersonInfo(_this.props.results[0].results[1].id), _this.props.fetchPersonCredits(_this.props.results[0].results[1].id));\n        }\n      } else if (_this.props.results.length > 0 && _this.props.results[0].results[2] !== undefined && _this.state.personId !== _this.props.results[0].results[2].id) {\n        if (_this.props.results[0].results[2] !== undefined && _this.props.results[0].results[2].media_type === 'person' && _this.props.results[0].results[2].popularity > 2) {\n          _this.setState({\n            personId: _this.props.results[0].results[2].id,\n            read: 'Read More',\n            maxLength: 500\n          }, _this.props.fetchPersonInfo(_this.props.results[0].results[2].id), _this.props.fetchPersonCredits(_this.props.results[0].results[2].id));\n        }\n      }\n    };\n\n    _this.readMore = function () {\n      _this.setState({\n        maxLength: 10000,\n        read: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //console.log(this.state.personId)\n      var results;\n      var person_results;\n      var person;\n\n      if (this.props.results[0] === undefined) {\n        return React.createElement(\"div\", {\n          className: \".col-md-8 search-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"person-results failure\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"person-error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Search failed, please try again\")));\n      }\n\n      if (this.props.results[0].results[0] === undefined || this.props.results[0].results[1].popularity < 2) {\n        return React.createElement(\"div\", {\n          className: \".col-md-8 search-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"person-results failure\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"person-error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Search failed wtf, please try again\")));\n      } else {\n        if (this.props.results.length > 0 && this.props.results[0].results[0] !== undefined && this.props.results[0].results[0].media_type !== 'person' && this.props.results[0].results[1].media_type !== 'person' && this.props.results[0].results[2].media_type !== 'person') {\n          //console.log(this.props.results[0].results[0].media_type);\n          results = this.props.results[0].results.map(function (rs) {\n            if (rs.media_type === 'movie' && rs.poster_path !== null) {\n              return React.createElement(\"div\", {\n                className: \".col-md-4 search-container\",\n                key: rs.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 67\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"search-results\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 68\n                },\n                __self: this\n              }, React.createElement(\"h5\", {\n                className: \"search-title\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 69\n                },\n                __self: this\n              }, rs.title), React.createElement(\"img\", {\n                className: \"search-image\",\n                src: \"\".concat(img_url).concat(rs.poster_path),\n                alt: rs.title,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 70\n                },\n                __self: this\n              }), React.createElement(\"p\", {\n                className: \"search-release\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 71\n                },\n                __self: this\n              }, \"Released: \".concat(rs.release_date)), React.createElement(\"p\", {\n                className: \"search-vote\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 72\n                },\n                __self: this\n              }, \"Rating: \".concat(rs.vote_average))));\n            }\n\n            if (rs.poster_path === 'null' || rs.poster_path === '' || rs.media_type === 'person') {\n              return React.createElement(\"div\", {\n                key: rs.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 77\n                },\n                __self: this\n              }, null);\n            }\n\n            if (rs.media_type === 'tv' && rs.poster_path !== null) {\n              return React.createElement(\"div\", {\n                className: \".col-md-4 search-container\",\n                key: rs.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 80\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"search-results\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 81\n                },\n                __self: this\n              }, React.createElement(\"h5\", {\n                className: \"search-title\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 82\n                },\n                __self: this\n              }, rs.name), React.createElement(\"img\", {\n                className: \"search-image\",\n                src: \"\".concat(img_url).concat(rs.poster_path),\n                alt: rs.title,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 83\n                },\n                __self: this\n              }), React.createElement(\"p\", {\n                className: \"search-release\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 84\n                },\n                __self: this\n              }, \"Aired: \".concat(rs.first_air_date)), React.createElement(\"p\", {\n                className: \"search-vote\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 85\n                },\n                __self: this\n              }, \"Rating: \".concat(rs.vote_average))));\n            }\n\n            if (rs.poster_path === '' || rs.backdrop_path === '' || rs.media_type === 'person') {\n              return React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 90\n                },\n                __self: this\n              }, null);\n            }\n          });\n        }\n\n        if (this.props.results.length > 0) {\n          if (this.props.results[0].results[0] !== undefined || this.props.results[0].results[1] !== undefined || this.props.results[0].results[2] !== undefined) {\n            if (this.props.results[0].results[0].media_type === 'person' || this.props.results[0].results[1].media_type === 'person' || this.props.results[0].results[2].media_type === 'person') {\n              //onsole.log(this.props.results[0]);\n              person_results = this.props.results[0].results.map(function (pr) {\n                if (pr.profile_path !== null && pr.backdrop_path !== null && pr.media_type === 'person' && pr.popularity >= 2) {\n                  return React.createElement(\"div\", {\n                    className: \".col-md-4 search-container\",\n                    key: pr.id,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 101\n                    },\n                    __self: this\n                  }, React.createElement(\"div\", {\n                    className: \"search-results-person\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 102\n                    },\n                    __self: this\n                  }, React.createElement(\"h5\", {\n                    className: \"search-title\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 103\n                    },\n                    __self: this\n                  }, pr.name), React.createElement(\"img\", {\n                    className: \"search-image\",\n                    src: \"\".concat(img_url).concat(pr.profile_path),\n                    alt: pr.name,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 104\n                    },\n                    __self: this\n                  })));\n                }\n              });\n            }\n          } else {\n            return React.createElement(\"div\", {\n              className: \"loading\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 113\n              },\n              __self: this\n            }, \"Loading...\");\n          }\n        }\n\n        if (this.props.person.length > 0) {\n          person = this.props.person.map(function (person) {\n            if (person.popularity >= 2) {\n              return React.createElement(\"div\", {\n                className: \".col-md-8 search-container\",\n                key: person.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 121\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"person-results\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 122\n                },\n                __self: this\n              }, React.createElement(\"p\", {\n                className: \"person-bio\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 123\n                },\n                __self: this\n              }, person.biography.length > 500 ? person.biography.substr(0, _this2.state.maxLength) : person.biography), person.biography.length > 520 ? React.createElement(\"p\", {\n                className: \"readmore\",\n                onClick: function onClick() {\n                  _this2.readMore();\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 124\n                },\n                __self: this\n              }, _this2.state.read) : ''));\n            } else {\n              return React.createElement(\"div\", {\n                className: \".col-md-8 search-container\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 130\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"person-results\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 131\n                },\n                __self: this\n              }, React.createElement(\"p\", {\n                className: \"person-error\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 132\n                },\n                __self: this\n              }, \"Sorry could not find that\")));\n            }\n          });\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, this.props.results[0].results[0].media_type !== 'person' ? results : person_results, this.props.results[0].results[0].media_type !== 'person' ? null : person), this.props.results[0].results[0].media_type === 'person' ? React.createElement(SearchCredits, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return SearchPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    results: state.movTv.results,\n    person: state.movTv.personInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPersonInfo: fetchPersonInfo,\n  fetchPersonCredits: fetchPersonCredits\n})(SearchPage);","map":{"version":3,"sources":["C:\\Users\\wonde\\Desktop\\react\\traiflix\\traiflix\\src\\components\\search.js"],"names":["React","Component","connect","fetchPersonInfo","fetchPersonCredits","SearchCredits","img_url","SearchPage","state","personId","maxLength","read","componentDidUpdate","props","results","length","undefined","id","media_type","setState","popularity","readMore","person_results","person","map","rs","poster_path","title","release_date","vote_average","name","first_air_date","backdrop_path","pr","profile_path","biography","substr","mapStateToProps","movTv","personInfo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchPersonInfo, fetchPersonCredits } from '../store/actions/homepageActions';\r\n\r\nimport SearchCredits from './credits';\r\n\r\nconst img_url = 'https://image.tmdb.org/t/p/original';\r\n\r\nclass SearchPage extends Component {\r\n    \r\n    state = {\r\n        personId: '',\r\n        maxLength: 500,\r\n        read: 'Read More',\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if(this.props.results.length > 0 && this.props.results[0].results[0] !== undefined && this.state.personId !== this.props.results[0].results[0].id){\r\n            if(this.props.results[0].results[0].media_type === 'person'){\r\n                this.setState({personId: this.props.results[0].results[0].id, read: 'Read More', maxLength: 500}, this.props.fetchPersonInfo(this.props.results[0].results[0].id), this.props.fetchPersonCredits(this.props.results[0].results[0].id));\r\n            }\r\n        } else if(this.props.results.length > 0 && this.props.results[0].results[1] !== undefined && this.state.personId !== this.props.results[0].results[1].id){\r\n            if(this.props.results[0].results[1].media_type === 'person' && this.props.results[0].results[1].popularity > 2){\r\n                this.setState({personId: this.props.results[0].results[1].id, read: 'Read More', maxLength: 500}, this.props.fetchPersonInfo(this.props.results[0].results[1].id), this.props.fetchPersonCredits(this.props.results[0].results[1].id));\r\n            }\r\n        } else if(this.props.results.length > 0 && this.props.results[0].results[2] !== undefined && this.state.personId !== this.props.results[0].results[2].id){\r\n            if(this.props.results[0].results[2] !== undefined && this.props.results[0].results[2].media_type === 'person' && this.props.results[0].results[2].popularity > 2){\r\n                this.setState({personId: this.props.results[0].results[2].id, read: 'Read More', maxLength: 500}, this.props.fetchPersonInfo(this.props.results[0].results[2].id), this.props.fetchPersonCredits(this.props.results[0].results[2].id));\r\n            }\r\n        }\r\n    }\r\n\r\n    readMore = () => {\r\n        this.setState({maxLength: 10000, read: ''});\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n    //console.log(this.state.personId)\r\n    let results;\r\n    let person_results;\r\n    let person;\r\n            if(this.props.results[0] === undefined){\r\n                return (\r\n                    <div className='.col-md-8 search-container'>\r\n                        <div className='person-results failure'>\r\n                            <p className='person-error'>{`Search failed, please try again`}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } if (this.props.results[0].results[0] === undefined || this.props.results[0].results[1].popularity < 2){\r\n                return (\r\n                    <div className='.col-md-8 search-container'>\r\n                        <div className='person-results failure'>\r\n                            <p className='person-error'>{`Search failed wtf, please try again`}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else {\r\n        if(this.props.results.length > 0 && this.props.results[0].results[0] !== undefined && this.props.results[0].results[0].media_type !== 'person' && this.props.results[0].results[1].media_type !== 'person' && this.props.results[0].results[2].media_type !== 'person'){\r\n            //console.log(this.props.results[0].results[0].media_type);\r\n            results = this.props.results[0].results.map(rs => {\r\n                if(rs.media_type === 'movie' && rs.poster_path !== null){\r\n                    return (\r\n                        <div className='.col-md-4 search-container' key={rs.id}>\r\n                            <div className='search-results'>\r\n                                <h5 className='search-title'>{rs.title}</h5>\r\n                                <img className='search-image' src={`${img_url}${rs.poster_path}`} alt={rs.title} />\r\n                                <p className='search-release'>{`Released: ${rs.release_date}`}</p>\r\n                                <p className='search-vote'>{`Rating: ${rs.vote_average}`}</p>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                if (rs.poster_path === 'null' || rs.poster_path === '' || rs.media_type === 'person'){\r\n                        return (<div key={rs.id}>{null}</div>)}\r\n                if (rs.media_type === 'tv' && rs.poster_path !== null){\r\n                    return (\r\n                    <div className='.col-md-4 search-container' key={rs.id}>\r\n                        <div className='search-results'>\r\n                            <h5 className='search-title'>{rs.name}</h5>\r\n                            <img className='search-image' src={`${img_url}${rs.poster_path}`} alt={rs.title} />\r\n                            <p className='search-release'>{`Aired: ${rs.first_air_date}`}</p>\r\n                            <p className='search-vote'>{`Rating: ${rs.vote_average}`}</p>\r\n                        </div>\r\n                    </div>\r\n                    )}\r\n                if (rs.poster_path === '' || rs.backdrop_path === '' || rs.media_type === 'person'){\r\n                        return (<div>{null}</div>);}\r\n            } \r\n            )\r\n        }\r\n            if (this.props.results.length > 0 ){\r\n                if(this.props.results[0].results[0] !== undefined || this.props.results[0].results[1] !== undefined || this.props.results[0].results[2] !== undefined){\r\n                if (this.props.results[0].results[0].media_type === 'person' || this.props.results[0].results[1].media_type === 'person' || this.props.results[0].results[2].media_type === 'person'){\r\n                    //onsole.log(this.props.results[0]);\r\n                    person_results = this.props.results[0].results.map(pr => {\r\n                    if(pr.profile_path !== null && pr.backdrop_path !== null && pr.media_type === 'person' && pr.popularity >= 2){\r\n                    return (\r\n                        <div className='.col-md-4 search-container' key={pr.id}>\r\n                                <div className='search-results-person'>\r\n                                    <h5 className='search-title'>{pr.name}</h5>\r\n                                    <img className='search-image' src={`${img_url}${pr.profile_path}`} alt={pr.name} />\r\n                                </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                }\r\n                )\r\n            } \r\n            } else {\r\n                    return <div className='loading'>Loading...</div>\r\n                }\r\n            }\r\n\r\n        if (this.props.person.length > 0){\r\n            person = this.props.person.map(person => {\r\n                if(person.popularity >= 2){\r\n                return (\r\n                    <div className='.col-md-8 search-container' key={person.id}>\r\n                        <div className='person-results'>\r\n                            <p className='person-bio'>{person.biography.length > 500 ? person.biography.substr(0, this.state.maxLength) : person.biography}</p>\r\n                            {person.biography.length > 520 ? <p className='readmore' onClick={() => {this.readMore()}}>{this.state.read}</p> : ''}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div className='.col-md-8 search-container'>\r\n                        <div className='person-results'>\r\n                            <p className='person-error'>{`Sorry could not find that`}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            })\r\n        } }\r\n            return (\r\n                <div className='container-fluid'>\r\n                        <div className='row'>\r\n                                {this.props.results[0].results[0].media_type !== 'person' ? results : person_results}\r\n                                {this.props.results[0].results[0].media_type !== 'person' ? null : person}\r\n                        </div>\r\n                                {this.props.results[0].results[0].media_type === 'person' ? <SearchCredits /> : null}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        results: state.movTv.results,\r\n        person: state.movTv.personInfo,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchPersonInfo, fetchPersonCredits })(SearchPage);"]},"metadata":{},"sourceType":"module"}